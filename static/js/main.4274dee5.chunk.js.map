{"version":3,"sources":["store/index.ts","store/sagas/index.ts","store/sagas/init.ts","store/sagas/refresh.ts","store/sagas/loadBagData.ts","store/sagas/uploadBagData.ts","store/sagas/reuploadBagData.ts","store/sagas/publishBagData.ts","store/sagas/purchaseBag.ts","store/sagas/sellBag.ts","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","components/QRCodeComponent.tsx","components/identity/IdentityScreen.tsx","assets/logo.png","App.tsx","Root.tsx","index.tsx","utils/prepareDeploy.ts","utils/waitForUnforgeable.ts","utils/addressFromPurseId.ts","utils/replacer.ts"],"names":["history","sagas","rootSaga","all","initSaga","refreshSaga","loadBagDataSaga","uploadBagDataSaga","reuploadBagDataSaga","publishBagDataSaga","purchaseBagSaga","sellBagSaga","initialState","did","undefined","readOnlyUrl","validatorUrl","contractPublicKey","identities","registryUri","publicKey","bags","bagsData","isLoading","searchText","platform","authorised","user","reducer","state","action","console","log","type","payload","pubKey","bagId","document","sagaMiddleware","createSagaMiddleware","createBrowserHistory","middlewares","routerMiddleware","sagasFunction","error","store","createStore","combineReducers","router","connectRouter","applyMiddleware","run","getPublicKey","createSelector","getUser","getPlatform","getPrivateKey","Promise","resolve","reject","a","includes","FingerprintAIO","isAvailable","then","available","loadBiometricSecret","description","disableBackup","privateKey","catch","err","info","JSON","stringify","SecureStoragePlugin","get","key","parsedInfo","parse","value","getBags","getBagsData","getConnected","getDocumentsCompleted","documentsComplete","Object","keys","forEach","folder","signatures","getDocumentsAddressesInOrder","sort","b","date","getDocumentsAwaitingSignature","$documentsAddressesInOrder","filter","price","boxId","documentsAwaitingSignature","require","readPursesTerm","readBoxTerm","readPursesDataTerm","load","getState","put","storeStr","term2","masterRegistryUri","rchainToolkit","exploreDeploy","term","readBoxResult","box","rhoValToJs","expr","pursesIds","purses","length","term1","contractId","readAllPursesResult","boxData","pursesKeys","term3","readPursesDataResult","rchainTokenValues","registerBiometricSecret","secret","invalidateOnEnrollment","record","set","DID","getRchainResolver","KeyResolver","getResolver","resolver","authSecret","Buffer","from","provider","Secp256k1Provider","authenticate","authenticated","expr2","newBags","addressFromPurseId","newBagsData","dataAtNameBuffer","decodeURI","unzippedBuffer","inflate","fileAsString","toString","jwe","decryptDagJWE","jws","dagJwsObj","dagJwsData","data","verifyJWS","verified","kid","resolved","publicKeyHex","fileAsJson","dagCBOR","util","deserialize","decodeBase64","signature","signatureCount","deauthenticate","dispatch","push","takeEvery","refresh","publicKeyFromPrivateKey","loadBagData","docAddr","createPursesTerm","uploadBagData","recipient","newBagId","recipientDid","fileDocument","files","resolution","mainFileResolution","scheme","mainFile","createDagJWS","linkedBlock","createDagJWE","encodeBase64","protectedHeader","alg","stringifiedJws","replacer","deflatedJws","deflate","gzipped","id","quantity","localStorage","setItem","blocks","position","validAfterBlockNumberResponse","blockNumber","Error","timestamp","Date","getTime","prepareDeploy","pd","getDeployOptions","deployOptions","deploy","startsWith","Swal","fire","text","showConfirmButton","waitForUnforgeable","names","title","timer","didClose","window","location","reload","purchaseAndWithdrawTerm","reuploadBagData","i","suffix","parseInt","slice","signedDocument","parsedDid","toBoxId","path","substring","purseId","withdrawQuantity","newId","merge","publishBagData","jwsToken","parsedPriceInDust","purchaseTerm","notify","step","purchaseBag","bagData","updatePursePriceTerm","sellBag","setTimeout","webpackEmptyAsyncContext","req","e","code","module","exports","map","webpackAsyncContext","__webpack_require__","o","ids","QRCodeComponent","url","qrcodecanvas","React","useRef","useState","enlarged","setEnlarged","useEffect","opts","errorCorrectionLevel","width","height","margin","toCanvas","current","res","className","color","onClick","ref","IdentityScreen","connect","props","balance","setBalance","main","revAddressFromPublicKey","result","revBalance","LoginView","lazy","DockListView","PublicStore","App","init","setPlatform","setUser","redfill","showIdentity","setShowIdentity","demo","setDemo","useTour","setIsOpen","identity","setCurrentStep","setSteps","currentStep","getItem","params","queryString","search","existingDemo","axios","response","Device","getInfo","slot","src","Logo","class","icon","closeCircleOutline","size","personCircle","options","initialSlide","speed","pager","onIonSlideDidChange","event","target","getActiveIndex","fallback","isOpen","exact","render","rprops","match","hash","to","pathname","steps","selector","content","showBadge","showCloseButton","showPrevNextButtons","showNavigation","onClickMask","ReactDOM","Root","getElementById","httpUrlReadOnly","deployer","nameQty","prepareDeployResponse","name","interval","setInterval","resp","http","dataAtName","UnforgPrivate","depth","dataAtNameResponse","exprs","clearInterval","Array","reduce","sorted"],"mappings":"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","file":"static/js/main.4274dee5.chunk.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { all } from 'redux-saga/effects';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { sagas } from './sagas/';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { routerMiddleware } from 'connected-react-router/immutable';\r\nimport { createBrowserHistory, History } from 'history'\r\n\r\nimport { CombinedState } from 'redux';\r\nimport { RouterState } from 'connected-react-router';\r\n\r\nimport {\r\n  FingerprintAIO,\r\n  //FingerprintOptions\r\n} from \"@ionic-native/fingerprint-aio/\";\r\n\r\nimport { DID, JWSSignature } from 'dids';\r\n\r\nimport { SecureStoragePlugin } from \"capacitor-secure-storage-plugin\";\r\n\r\nexport interface State {\r\n  did: undefined | DID;\r\n  readOnlyUrl: string;\r\n  validatorUrl: string;\r\n\r\n  // rchain-token contract\r\n  contractPublicKey: undefined | string;\r\n  identities: { [pubKey: string]: string }; //Map of identities <pubkey, regUri>\r\n  registryUri: undefined | string;\r\n\r\n  publicKey: undefined | string;\r\n\r\n  // rchain-token bags and data\r\n  bags: { [address: string]: Bag };\r\n  bagsData: { [address: string]: Folder };\r\n\r\n  isLoading: boolean;\r\n  searchText: string;\r\n  platform: string;\r\n\r\n  authorised: boolean;\r\n  user: string;\r\n}\r\n\r\nexport type HistoryState = CombinedState<{\r\n  router: RouterState<unknown>;\r\n  reducer: State; \r\n}>\r\n\r\nexport interface Bag {\r\n  n: string;\r\n  id: string;\r\n  quantity: number;\r\n  price: undefined | number;\r\n  publicKey: string;\r\n  timestamp: number;\r\n  boxId: string;\r\n}\r\nexport interface Signature extends JWSSignature {\r\n  payload: string;\r\n  publicKey: string;\r\n}\r\n\r\nexport interface Folder {\r\n  files: { [s: string]: Document },\r\n  signatures: { [s: string]: Signature };\r\n  scheme?: { [s: string]: string },\r\n  date: string;\r\n  mainFile: string;\r\n}\r\n\r\nexport interface Document {\r\n  name: string;\r\n  mimeType: string;\r\n  data: string;\r\n  //parent?: string;\r\n}\r\n\r\nconst initialState: State = {\r\n  did: undefined,\r\n  readOnlyUrl: 'https://gracious-pare-6c4c99.netlify.app',\r\n  validatorUrl: 'https://gracious-pare-6c4c99.netlify.app',\r\n  contractPublicKey: undefined,\r\n  identities: {},\r\n  registryUri: undefined,\r\n  publicKey: undefined,\r\n  bags: {},\r\n  bagsData: {},\r\n  isLoading: false,\r\n  searchText: '',\r\n  platform: '',\r\n  authorised: false,\r\n  user: '',\r\n};\r\n\r\nconst reducer = (\r\n  state = initialState,\r\n  action: { type: string; payload: any }\r\n): State => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case 'INIT': {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case 'AUTHORISED': {\r\n      return {\r\n        ...state,\r\n        did: action.payload.did,\r\n        authorised: true,\r\n        registryUri: action.payload.registryUri,\r\n        publicKey: action.payload.publicKey,\r\n        user: action.payload.user\r\n      };\r\n    }\r\n    case \"ADD_IDENTITY\": {\r\n      return {\r\n        ...state,\r\n        identities: {\r\n          ...state.identities,\r\n          [action.payload.pubKey]: action.payload.registryUri\r\n        }\r\n      };\r\n    }\r\n    case \"INIT_COMPLETED\": {\r\n      return {\r\n        ...state,\r\n        contractPublicKey: action.payload.contractPublicKey,\r\n      };\r\n    }\r\n    case 'SET_LOADING': {\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    }\r\n    case 'SAVE_BAGS_COMPLETED': {\r\n      return {\r\n        ...state,\r\n        bags: action.payload,\r\n      };\r\n    }\r\n    case 'SAVE_BAG_DATA_COMPLETED': {\r\n      return {\r\n        ...state,\r\n        bagsData: {\r\n          ...state.bagsData,\r\n          [action.payload.bagId]: action\r\n            .payload.document,\r\n        },\r\n      };\r\n    }\r\n    case 'SAVE_BAGS_DATA_COMPLETED': {\r\n      return {\r\n        ...state,\r\n        bagsData: action.payload,\r\n      };\r\n    }\r\n\r\n    case 'SET_PLATFORM': {\r\n      return {\r\n        ...state,\r\n        platform: action.payload.platform,\r\n      };\r\n    }\r\n    case 'SET_USER': {\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n      }\r\n    }\r\n    case 'SET_SEARCH_TEXT': {\r\n      return {\r\n        ...state,\r\n        searchText: action.payload.searchText,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const history = createBrowserHistory()\r\n\r\nlet middlewares = [routerMiddleware(history), sagaMiddleware];\r\n\r\nconst sagasFunction = function* rootSaga() {\r\n  try {\r\n    yield all([sagas()]);\r\n  } catch (err) {\r\n    console.error('An error occured in sagas');\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst createRootReducer = (history: History) => combineReducers({\r\n  router: connectRouter(history),\r\n  reducer\r\n})\r\n\r\nexport const store = createStore(createRootReducer(history), applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(sagasFunction);\r\n\r\nexport interface AccountStorage {\r\n  registryUri: string,\r\n  privateKey: string\r\n}\r\nexport const getPublicKey = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => state.reducer.publicKey\r\n);\r\nexport const getUser = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => state.reducer.user\r\n);\r\nexport const getPlatform = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => state.reducer.platform\r\n);\r\nexport const getPrivateKey = createSelector(\r\n  getPublicKey,\r\n  getPlatform,\r\n  (publicKey: HistoryState['reducer']['publicKey'], platform: HistoryState['reducer']['platform']) => {\r\n    return new Promise<string>(async (resolve, reject) => {\r\n      if ([\"ios\", \"android\"].includes(platform)) {\r\n        FingerprintAIO.isAvailable()\r\n        .then(available => {\r\n          FingerprintAIO.loadBiometricSecret({\r\n            description: \"Allow the app to access your PrivateKey?\",\r\n            disableBackup: true, // always disabled on Android\r\n          }).then(privateKey => {\r\n            resolve(privateKey)\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.info(\r\n            \"Biometrics not available. Reason: \" + JSON.stringify(err)\r\n          );\r\n          reject(err)\r\n        });\r\n      }\r\n      else {\r\n        const info = await SecureStoragePlugin.get({ key: publicKey as string })\r\n        const parsedInfo = JSON.parse(info.value) as AccountStorage;\r\n        resolve(parsedInfo.privateKey);\r\n      }\r\n    });\r\n  }\r\n);\r\nexport const getBags = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => state.reducer.bags\r\n);\r\nexport const getBagsData = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => state.reducer.bagsData\r\n);\r\nexport const getConnected = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState): 'owner' | 'guest' => state.reducer.contractPublicKey === state.reducer.publicKey ? \"owner\" : \"guest\"\r\n);\r\n\r\nexport const getDocumentsCompleted = createSelector(\r\n  (state: HistoryState) => state,\r\n  (state: HistoryState) => {\r\n    const bagsData = state.reducer.bagsData;\r\n    const documentsComplete: { [bagId: string]: Folder } = {};\r\n    Object.keys(bagsData).forEach(bagId => {\r\n      const folder = bagsData[bagId];\r\n      if (\r\n        folder && folder.signatures && \r\n        folder.signatures['0'] &&\r\n        folder.signatures['1']\r\n      ) {\r\n        documentsComplete[bagId] = folder;\r\n        return;\r\n      }\r\n    });\r\n\r\n    return documentsComplete;\r\n  }\r\n);\r\n\r\nexport const getDocumentsAddressesInOrder = createSelector(\r\n  getBagsData,\r\n  (bagsData: HistoryState['reducer']['bagsData']) => {\r\n    const addresses = Object.keys(bagsData).sort((a, b) => {\r\n      if (bagsData[a].date === bagsData[b].date) {\r\n        return 1;\r\n      } else {\r\n        return bagsData[a].date > bagsData[b].date ? 1 : -1\r\n      }\r\n    })\r\n\r\n    return addresses;\r\n  }\r\n);\r\n\r\nexport const getDocumentsAddressesForSale = createSelector(\r\n  getBags,\r\n  getDocumentsAddressesInOrder,\r\n  (bags: HistoryState['reducer']['bags'], $documentsAddressesInOrder) => {\r\n    const addresses = $documentsAddressesInOrder.filter((a) => {\r\n      let price = bags[a].price || 0;\r\n      return price > 0;\r\n    })\r\n    return addresses;\r\n  }\r\n);\r\n\r\nexport const getOwnedDocumentsAddresses = createSelector(\r\n  getBags,\r\n  getUser,\r\n  getDocumentsAddressesInOrder,\r\n  (bags: HistoryState['reducer']['bags'], user: string, $documentsAddressesInOrder) => {\r\n    const addresses = $documentsAddressesInOrder.filter((a) => {\r\n      return bags[a].boxId === user;\r\n    })\r\n    return addresses;\r\n  }\r\n)\r\n\r\nexport const getDocumentsAwaitingSignature = createSelector(\r\n  getBagsData,\r\n  getPublicKey,\r\n  (bagsData: HistoryState['reducer']['bagsData'], publicKey: HistoryState['reducer']['publicKey']) => {\r\n    const documentsAwaitingSignature: { [bagId: string]: Folder } = {};\r\n    Object.keys(bagsData).forEach(bagId => {\r\n      const folder = bagsData[bagId];\r\n\r\n      if (\r\n        folder && folder.signatures &&\r\n        folder.signatures['0'] &&\r\n        !folder.signatures['1'] &&\r\n        folder.signatures['0'].publicKey !== publicKey\r\n      ) {\r\n        documentsAwaitingSignature[bagId] = folder;\r\n        return;\r\n      }\r\n    });\r\n\r\n    return documentsAwaitingSignature;\r\n  }\r\n);\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { initSaga } from './init';\r\nimport { refreshSaga } from './refresh';\r\nimport { loadBagDataSaga } from './loadBagData';\r\nimport { uploadBagDataSaga } from './uploadBagData';\r\nimport { reuploadBagDataSaga } from './reuploadBagData';\r\nimport { publishBagDataSaga } from './publishBagData';\r\nimport { purchaseBagSaga } from './purchaseBag';\r\nimport { sellBagSaga } from './sellBag';\r\n\r\nexport const sagas = function* rootSaga() {\r\n  yield all([\r\n    initSaga(),\r\n    refreshSaga(),\r\n    loadBagDataSaga(),\r\n    uploadBagDataSaga(),\r\n    reuploadBagDataSaga(),\r\n    publishBagDataSaga(),\r\n    purchaseBagSaga(),\r\n    sellBagSaga(),\r\n  ]);\r\n};\r\n","import { takeEvery, put } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport {CombinedState} from 'redux';\r\n\r\nimport { store, State, Bag, AccountStorage, Folder, Signature } from '..';\r\nimport { addressFromPurseId } from '../../utils/addressFromPurseId';\r\nimport { inflate } from 'pako';\r\n\r\nimport { push, RouterState } from 'connected-react-router';\r\n\r\nimport {\r\n  FingerprintAIO\r\n} from \"@ionic-native/fingerprint-aio/\";\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from \"rchain-did-resolver\";\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID, DagJWS } from 'dids';\r\nimport { decodeBase64 } from 'dids/lib/utils'\r\nimport dagCBOR from 'ipld-dag-cbor'\r\nimport { JWE } from 'did-jwt'\r\n\r\nimport { SecureStoragePlugin } from \"capacitor-secure-storage-plugin\";\r\n\r\nconst {\r\n  readPursesTerm,\r\n  readBoxTerm,\r\n  readPursesDataTerm,\r\n  //readConfigTerm\r\n} = require(\"rchain-token\")\r\n\r\nconst load = function* (action: { type: string; payload: any}) {\r\n  const state : CombinedState<{ router: RouterState<unknown>; reducer: State; }> = store.getState();\r\n  yield put(\r\n    {\r\n      type: \"SET_LOADING\",\r\n      payload: true\r\n    }\r\n  );\r\n\r\n  const pubKey = action.payload.publicKey;\r\n  const registryUri = action.payload.registryUri;\r\n  const user = action.payload.user;\r\n  const storeStr = action.payload.store;\r\n\r\n  const term2 = readBoxTerm({ boxId: user, masterRegistryUri: registryUri });\r\n  \r\n  const readBoxResult = yield rchainToolkit.http.exploreDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    {\r\n      term: term2\r\n    }\r\n  )\r\n  \r\n  const box = rchainToolkit.utils.rhoValToJs(JSON.parse(readBoxResult).expr[0]);\r\n\r\n  const pursesIds = Object.keys(box.purses).length > 0 ? box.purses[storeStr] : [];\r\n  const term1 = readPursesTerm({\r\n    masterRegistryUri: registryUri,\r\n    contractId: storeStr,\r\n    pursesIds: pursesIds || [],\r\n  });\r\n  const readAllPursesResult = yield rchainToolkit.http.exploreDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    {\r\n      term: term1\r\n    }\r\n  )\r\n  \r\n\r\n  const expr = JSON.parse(readAllPursesResult).expr;\r\n  const boxData = rchainToolkit.utils.rhoValToJs(expr ? expr[0] : {});\r\n\r\n  const purses =  boxData;\r\n  const pursesKeys = Object.keys(purses || {});\r\n  let readPursesDataResult;\r\n  if (pursesKeys.length > 0) {\r\n    const term3 = readPursesDataTerm(\r\n    {\r\n      masterRegistryUri: registryUri,\r\n      pursesIds: pursesKeys,\r\n      contractId: storeStr,\r\n    });\r\n    readPursesDataResult = yield rchainToolkit.http.exploreDeploy(\r\n      state.reducer.readOnlyUrl,\r\n      {\r\n        term: term3\r\n      }\r\n    )\r\n  }\r\n  const rchainTokenValues = rchainToolkit.utils.rhoValToJs(JSON.parse(readBoxResult).expr[0])\r\n  \r\n  if ([\"ios\", \"android\"].includes(state.reducer.platform)) {\r\n    const available = yield FingerprintAIO.isAvailable();\r\n    if (available) {\r\n      yield FingerprintAIO.registerBiometricSecret({\r\n        description: \"Register this private key?\",\r\n        secret: action.payload.privateKey,\r\n        invalidateOnEnrollment: false,\r\n        disableBackup: true, // always disabled on Android\r\n      })\r\n    }\r\n  }\r\n  else {\r\n    const record = { key: pubKey, value: JSON.stringify({\r\n      registryUri: action.payload.registryUri,\r\n      privateKey: action.payload.privateKey\r\n      } as AccountStorage)\r\n     }\r\n    SecureStoragePlugin.set(record)\r\n  }\r\n  const did = new DID({ resolver: { ...yield getRchainResolver(), ...KeyResolver.getResolver() } })\r\n  //const asArr = new Uint8Array(action.payload.privateKey.match(/.{1,2}/g).map((byte: string) => parseInt(byte, 16))).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\r\n  const authSecret = Buffer.from(action.payload.privateKey, 'hex');\r\n\r\n  const provider = new Secp256k1Provider(authSecret)\r\n  yield did.authenticate({ provider: provider })\r\n  if (did.authenticated) {\r\n    yield put(\r\n      {\r\n        type: \"AUTHORISED\",\r\n        payload: {\r\n          did: did,\r\n          authorised: true,\r\n          registryUri: action.payload.registryUri,\r\n          publicKey: pubKey,\r\n          user: user\r\n        }\r\n      }\r\n    );\r\n  }\r\n  \r\n  yield put(\r\n    {\r\n      type: \"INIT_COMPLETED\",\r\n      payload: {\r\n        contractPublicKey: rchainTokenValues.publicKey,\r\n      }\r\n    }\r\n  );\r\n\r\n  const expr2 = JSON.parse(readAllPursesResult).expr;\r\n  const bags = rchainToolkit.utils.rhoValToJs(expr2 ? expr2[0] : {}) || {};\r\n  const newBags: { [address: string]: Bag } = {};\r\n  Object.keys(bags).forEach(bagId => {\r\n    newBags[addressFromPurseId(action.payload.registryUri as string, bagId)] = bags[bagId];\r\n  });\r\n  yield put(\r\n    {\r\n      type: \"SAVE_BAGS_COMPLETED\",\r\n      payload: newBags,\r\n    }\r\n  );\r\n  \r\n  let bagsData = Object();\r\n  if (readPursesDataResult) {\r\n  bagsData = rchainToolkit.utils.rhoValToJs(JSON.parse(readPursesDataResult).expr[0]);\r\n\r\n  const newBagsData: { [address: string]: Folder } = {};\r\n\r\n\r\n  Object.keys(bagsData).forEach(async bagId => {\r\n    const dataAtNameBuffer = Buffer.from(decodeURI(bagsData[bagId]), 'base64');\r\n    const unzippedBuffer = Buffer.from(inflate(dataAtNameBuffer));\r\n    const fileAsString = unzippedBuffer.toString(\"utf-8\");\r\n    \r\n    let dagJwsObj : DagJWS;\r\n    let dagJwsData : string;\r\n    if (storeStr === \"store\") {\r\n      const jwe = JSON.parse(fileAsString) as JWE;\r\n      let jws;\r\n      try {\r\n        jws = await did.decryptDagJWE(jwe);\r\n      } catch(err) {\r\n        console.info(\"Unable to decrypt. \" + err);\r\n        return;\r\n      }\r\n      dagJwsObj = jws?.jws;\r\n      dagJwsData = jws?.data\r\n    } else {\r\n      const jws = JSON.parse(fileAsString);\r\n      dagJwsObj = jws?.jws;\r\n      dagJwsData = jws?.data;\r\n    }\r\n    \r\n    if (dagJwsObj && dagJwsData) {\r\n      try {\r\n        const verified = await did.verifyJWS(dagJwsObj);\r\n\r\n        const resolved = await did.resolve(verified.kid);\r\n        const publicKey = resolved.publicKey[0].publicKeyHex;\r\n\r\n        const fileAsJson = dagCBOR.util.deserialize(decodeBase64(dagJwsData)) as Folder;\r\n\r\n        const signature = {\r\n          ...dagJwsObj.signatures[0],\r\n          payload: dagJwsObj.payload,\r\n          publicKey: publicKey\r\n        } as Signature;\r\n\r\n        const signatureCount = Object.keys(fileAsJson.signatures).length;\r\n        fileAsJson.signatures[signatureCount] = signature;\r\n        \r\n        newBagsData[addressFromPurseId(action.payload.registryUri as string, bagId)] = fileAsJson;\r\n      }\r\n      catch(err) {\r\n        console.info(\"Unable to verify. \" + err);\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n    \r\n\r\n  });\r\n  yield put(\r\n    {\r\n      type: \"SAVE_BAGS_DATA_COMPLETED\",\r\n      payload: newBagsData\r\n    }\r\n  );\r\n\r\n  }\r\n  \r\n  did.deauthenticate();\r\n  \r\n\r\n  yield put(\r\n    {\r\n      type: \"SET_LOADING\",\r\n      payload: false\r\n    }\r\n  );\r\n\r\n  store.dispatch(push('/PoC/#/doc'))\r\n\r\n  return true;\r\n};\r\n\r\nexport const initSaga = function* () {\r\n  yield takeEvery(\"INIT\", load);\r\n};\r\n","import { takeEvery, put } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport {CombinedState} from 'redux';\r\n\r\nimport { store, State,/* Bag, AccountStorage, Document, Signature,*/ getPrivateKey } from '..';\r\n//import { addressFromPurseId } from '../../utils/addressFromPurseId';\r\n//import { inflate } from 'pako';\r\n\r\nimport { /*push,*/ RouterState } from 'connected-react-router';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from \"rchain-did-resolver\";\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID, /*DagJWS*/ } from 'dids';\r\n/*\r\nimport { decodeBase64 } from 'dids/lib/utils'\r\nimport dagCBOR from 'ipld-dag-cbor'\r\nimport { JWE } from 'did-jwt'\r\n*/\r\n/*\r\nconst {\r\n  readBagsTerm,\r\n  readBagsOrTokensDataTerm,\r\n  read,\r\n} = require('rchain-token-files');\r\n*/\r\nconst refresh = function* (action: { type: string; payload: any}) {\r\n  const state : CombinedState<{ router: RouterState<unknown>; reducer: State; }> = store.getState();\r\n  \r\n  yield put(\r\n    {\r\n      type: \"SET_LOADING\",\r\n      payload: true\r\n    }\r\n  );\r\n\r\n  const privateKey: string = yield getPrivateKey(state);\r\n\r\n  const pubKey = rchainToolkit.utils.publicKeyFromPrivateKey(\r\n    privateKey as string\r\n  )\r\n/*\r\n  const term1 = readBagsTerm(action.payload.registryUri);\r\n  const ed1 = yield rchainToolkit.http.exploreDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    {\r\n      term: term1\r\n    }\r\n  )\r\n\r\n  const term2 = read(action.payload.registryUri);\r\n  const ed2 = yield rchainToolkit.http.exploreDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    {\r\n      term: term2\r\n    }\r\n  )\r\n  const rchainTokenValues = rchainToolkit.utils.rhoValToJs(JSON.parse(ed2).expr[0])\r\n\r\n  const term3 = readBagsOrTokensDataTerm(action.payload.registryUri, 'bags');\r\n  const ed3 = yield rchainToolkit.http.exploreDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    {\r\n      term: term3\r\n    }\r\n  )\r\n  */\r\n\r\n  const did = new DID({ resolver: { ...yield getRchainResolver(), ...KeyResolver.getResolver() } })\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret)\r\n\r\n  yield did.authenticate({ provider: provider })\r\n\r\n  if (did.authenticated) {\r\n    yield put(\r\n      {\r\n        type: \"AUTHORISED\",\r\n        payload: {\r\n          did: did,\r\n          authorised: true,\r\n          registryUri: action.payload.registryUri,\r\n          publicKey: pubKey,\r\n        }\r\n      }\r\n    );\r\n  }\r\n  /*\r\n  yield put(\r\n    {\r\n      type: \"INIT_COMPLETED\",\r\n      payload: {\r\n        //nonce: rchainTokenValues.nonce,\r\n        contractPublicKey: rchainTokenValues.publicKey,\r\n      }\r\n    }\r\n  );\r\n  \r\n\r\n  const bags = rchainToolkit.utils.rhoValToJs(JSON.parse(ed1).expr[0]);\r\n  const newBags: { [address: string]: Bag } = {};\r\n  Object.keys(bags).forEach(bagId => {\r\n    newBags[addressFromPurseId(action.payload.registryUri as string, bagId)] = bags[bagId];\r\n  });\r\n  yield put(\r\n    {\r\n      type: \"SAVE_BAGS_COMPLETED\",\r\n      payload: newBags,\r\n    }\r\n  );\r\n\r\n  const bagsData = rchainToolkit.utils.rhoValToJs(JSON.parse(ed3).expr[0]);\r\n  const newBagsData: { [address: string]: Document } = {};\r\n\r\n  Object.keys(bagsData).forEach(async bagId => {\r\n    const dataAtNameBuffer = Buffer.from(decodeURI(bagsData[bagId]), 'base64');\r\n    const unzippedBuffer = Buffer.from(inflate(dataAtNameBuffer));\r\n    const fileAsString = unzippedBuffer.toString(\"utf-8\");\r\n\r\n    const jwe = JSON.parse(fileAsString) as JWE;\r\n    let jws;\r\n    try {\r\n      jws = await did.decryptDagJWE(jwe);\r\n    } catch(err) {\r\n      console.info(\"Unable to decrypt. \" + err);\r\n      return;\r\n    }\r\n    const dagJws: DagJWS = jws?.jws;\r\n    if (dagJws) {\r\n      try {\r\n        const verified = await did.verifyJWS(dagJws);\r\n\r\n        const resolved = await did.resolve(verified.kid);\r\n        const publicKey = resolved.publicKey[0].publicKeyHex;\r\n\r\n        const fileAsJson = dagCBOR.util.deserialize(decodeBase64(jws.data)) as Document;\r\n        fileAsJson.data = Buffer.from(fileAsJson.data, 'base64').toString(\"utf-8\");\r\n\r\n        const signature = {\r\n          ...dagJws.signatures[0],\r\n          payload: dagJws.payload,\r\n          publicKey: publicKey\r\n        } as Signature;\r\n\r\n        const signatureCount = Object.keys(fileAsJson.signatures).length;\r\n        fileAsJson.signatures[signatureCount] = signature;\r\n        \r\n        newBagsData[addressFromPurseId(action.payload.registryUri as string, bagId)] = fileAsJson;\r\n      }\r\n      catch(err) {\r\n        console.info(\"Unable to verify. \" + err);\r\n      }\r\n      \r\n    }\r\n\r\n  });\r\n  */\r\n\r\n  did.deauthenticate();\r\n  /*\r\n  yield put(\r\n    {\r\n      type: \"SAVE_BAGS_DATA_COMPLETED\",\r\n      payload: newBagsData\r\n    }\r\n  );\r\n  */\r\n\r\n  yield put(\r\n    {\r\n      type: \"SET_LOADING\",\r\n      payload: false\r\n    }\r\n  );\r\n\r\n  return true;\r\n};\r\n\r\nexport const refreshSaga = function* () {\r\n  yield takeEvery(\"REFRESH\", refresh);\r\n};\r\n","import { takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport { addressFromPurseId } from '../../utils/addressFromPurseId';\r\nimport { store, State, Document, getPrivateKey } from '../../store/'\r\n\r\nimport { CombinedState } from 'redux';\r\nimport { RouterState } from 'connected-react-router';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID, DagJWS } from 'dids';\r\nimport { decodeBase64 } from 'dids/lib/utils';\r\nimport dagCBOR from 'ipld-dag-cbor';\r\n\r\nconst loadBagData = function*(action: { type: string; payload: any }) {\r\n  console.log('load-bag-data', action.payload);\r\n  const state: CombinedState<{\r\n    router: RouterState<unknown>;\r\n    reducer: State;\r\n  }> = store.getState();\r\n  const docAddr = addressFromPurseId(\r\n    action.payload.registryUri,\r\n    action.payload.bagId\r\n  );\r\n\r\n  if (state.reducer.bagsData[docAddr]) {\r\n    yield put({\r\n      type: 'SET_LOADING_BAG',\r\n      payload: false,\r\n    });\r\n    return true;\r\n  }\r\n\r\n  yield put({\r\n    type: 'SET_LOADING_BAG_DATA',\r\n    payload: true,\r\n  });\r\n\r\n  const privateKey = yield getPrivateKey(state);\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  try {\r\n    const jwe = yield did.resolve('did:rchain:' + docAddr);\r\n    const jws = yield did.decryptDagJWE(jwe);\r\n    if (jws.jws) {\r\n      const verified = yield did.verifyJWS(jws.jws as DagJWS);\r\n      console.info(verified);\r\n\r\n      const fileAsJson = dagCBOR.util.deserialize(\r\n        decodeBase64(jws.data)\r\n      ) as Document;\r\n      fileAsJson.data = Buffer.from(fileAsJson.data, 'base64').toString(\r\n        'utf-8'\r\n      );\r\n\r\n      yield put({\r\n        type: 'SAVE_BAG_DATA_COMPLETED',\r\n        payload: {\r\n          bagId: addressFromPurseId(\r\n            action.payload.registryUri,\r\n            action.payload.bagId\r\n          ),\r\n          registryUri: action.payload.registryUri,\r\n          document: fileAsJson,\r\n        },\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: 'SAVE_BAG_DATA_COMPLETED',\r\n      payload: {\r\n        bagId: action.payload.bagId,\r\n        registryUri: action.payload.registryUri,\r\n        document: null,\r\n      },\r\n    });\r\n  }\r\n  console.log(\"payload data\", action.payload);\r\n\r\n  did.deauthenticate();\r\n\r\n  yield put({\r\n    type: 'SET_LOADING_BAG',\r\n    payload: false,\r\n  });\r\n\r\n  return true;\r\n};\r\n\r\nexport const loadBagDataSaga = function*() {\r\n  yield takeEvery('LOAD_BAG_DATA', loadBagData);\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport { deflate } from 'pako';\r\n//import { v4 } from 'uuid';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID } from 'dids';\r\nimport { encodeBase64 } from 'dids/lib/utils';\r\n//import { parse } from 'did-resolver';\r\n\r\nimport { Folder, store } from '../';\r\nimport replacer from '../../utils/replacer';\r\nimport prepareDeploy from '../../utils/prepareDeploy';\r\nimport waitForUnforgeable from '../../utils/waitForUnforgeable';\r\n//import validAfterBlockNumber from '../../utils/validAfterBlockNumber';\r\nimport { getPrivateKey, HistoryState } from '../index';\r\nimport { push } from 'connected-react-router';\r\nconst { createPursesTerm } = require('rchain-token');\r\n\r\nfunction notify() {\r\n  Swal.fire({\r\n      title: 'Success!',\r\n      text: 'Upload complete',\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      didClose: () => {\r\n        localStorage.setItem('tour', '1');\r\n        window.location.reload();\r\n      }\r\n  })\r\n  \r\n}\r\n\r\nconst uploadBagData = function*(action: {\r\n  type: string;\r\n  payload: { folder: Folder; bagId: string; description: string, mainFileResolution: string, recipient: string; price: number, mainFile: string };\r\n}) {\r\n  console.log('upload-bag-data', action.payload);\r\n  let recipient = action.payload.recipient;\r\n  const folder = action.payload.folder;\r\n  const newBagId = action.payload.bagId;\r\n  const state: HistoryState = store.getState();\r\n\r\n  const publicKey = state.reducer.publicKey;\r\n  const privateKey = yield getPrivateKey(state);\r\n\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  let recipientDid;\r\n  if (recipient) {\r\n    recipientDid = 'did:rchain:' + state.reducer.registryUri + \"/\" + recipient;\r\n  } else {\r\n    recipientDid = 'did:rchain:' + state.reducer.registryUri + \"/\" + state.reducer.user;\r\n  }\r\n\r\n\r\n  const fileDocument = {\r\n    files: folder.files,\r\n    signatures: folder.signatures,\r\n    date: folder.date,\r\n    description: action.payload.description,\r\n    resolution: action.payload.mainFileResolution,\r\n    scheme: {\r\n      '0': recipientDid,\r\n      '1': 'did:rchain:' + state.reducer.registryUri + \"/\" + state.reducer.user\r\n    },\r\n    mainFile: action.payload.mainFile || Object.keys(folder.files)[0]\r\n  } as Folder;\r\n\r\n\r\n  const { jws, linkedBlock } = yield did.createDagJWS(fileDocument);\r\n  \r\n  const jwe = yield did.createDagJWE(\r\n    { jws: jws, data: encodeBase64(linkedBlock) },\r\n    [recipientDid],\r\n    {\r\n      protectedHeader: {\r\n        alg: 'A256GCMKW',\r\n      },\r\n    }\r\n  );\r\n  \r\n  const stringifiedJws = JSON.stringify(jwe, replacer);\r\n  const deflatedJws = deflate(stringifiedJws);\r\n  const gzipped = Buffer.from(deflatedJws).toString('base64');\r\n\r\n  const payload = {\r\n    purses: {\r\n      [newBagId]: {\r\n        id: newBagId,\r\n        boxId: recipient,\r\n        type: '0',\r\n        quantity: 1,\r\n        price: null\r\n      }\r\n    },\r\n    data: {\r\n      [newBagId]: gzipped\r\n    },\r\n    masterRegistryUri: state.reducer.registryUri,\r\n    contractId: \"store\",\r\n    boxId: state.reducer.user,\r\n  };\r\n\r\n  localStorage.setItem('price', JSON.stringify(action.payload.price));\r\n\r\n  did.deauthenticate();\r\n  \r\n  const term = createPursesTerm(payload);\r\n\r\n  let validAfterBlockNumberResponse;\r\n  try {\r\n    validAfterBlockNumberResponse = JSON.parse(\r\n      yield rchainToolkit.http.blocks(state.reducer.readOnlyUrl, {\r\n        position: 1,\r\n      })\r\n    )[0].blockNumber;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw new Error('Unable to get last finalized block');\r\n  }\r\n\r\n  const timestamp = new Date().getTime();\r\n  \r\n  const pd = yield prepareDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    publicKey as string,\r\n    timestamp\r\n  );\r\n\r\n\r\n  const deployOptions = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term,\r\n    privateKey,\r\n    publicKey as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n  \r\n\r\n  try {\r\n    const deployResponse = yield rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions);\r\n    if (deployResponse.startsWith('\"Success!')) {\r\n      Swal.fire({\r\n        text: 'Upload is in progress',\r\n        showConfirmButton: false,\r\n      });\r\n    }\r\n\r\n    yield waitForUnforgeable(JSON.parse(pd).names[0], state.reducer.readOnlyUrl);\r\n    store.dispatch(push('/PoC/#/doc'));\r\n    notify();\r\n\r\n  }\r\n  catch(err) {\r\n    console.info(\"Unable to deploy\");\r\n    console.error(err);\r\n  }\r\n  \r\n  yield put({\r\n    type: 'PURCHASE_BAG_COMPLETED',\r\n    payload: {},\r\n  });\r\n\r\n  console.log(state);\r\n  \r\n  return true;\r\n};\r\n\r\nexport const uploadBagDataSaga = function*() {\r\n  yield takeEvery('UPLOAD', uploadBagData);\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport { deflate } from 'pako';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID } from 'dids';\r\nimport { parse } from 'did-resolver';\r\nimport { encodeBase64 } from 'dids/lib/utils';\r\n\r\nimport { Folder, store, getBagsData } from '../';\r\nimport replacer from '../../utils/replacer';\r\nimport prepareDeploy from '../../utils/prepareDeploy';\r\nimport waitForUnforgeable from '../../utils/waitForUnforgeable';\r\n//import validAfterBlockNumber from '../../utils/validAfterBlockNumber';\r\nimport { getPrivateKey, HistoryState } from '../index';\r\nimport { push } from 'connected-react-router';\r\n\r\nconst { purchaseAndWithdrawTerm } = require('rchain-token');\r\n\r\nfunction notify() {\r\n  Swal.fire({\r\n      title: 'Success!',\r\n      text: 'Attestation complete',\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      didClose: () => {\r\n        localStorage.setItem('tour', '2');\r\n        window.location.reload();\r\n      }\r\n  })\r\n}\r\n\r\nconst reuploadBagData = function*(action: {\r\n  type: string;\r\n  payload: { bagId: string; registryUri: string };\r\n}) {\r\n  console.log('reuploload-bag-data', action.payload);\r\n  const state: HistoryState = store.getState();\r\n  const bagsData = getBagsData(state);\r\n\r\n  const publicKey = state.reducer.publicKey;\r\n  const privateKey = yield getPrivateKey(state);\r\n\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  const folder =\r\n    bagsData[`${action.payload.registryUri}/${action.payload.bagId}`];\r\n  if (!folder) {\r\n    console.error('bagData/document not found');\r\n    return;\r\n  }\r\n\r\n  let i = '0';\r\n  let suffix = 'nft'\r\n  let newBagId = action.payload.bagId;\r\n  if (!folder.signatures['0']) {\r\n  } else if (!folder.signatures['1']) {\r\n    i = '1';\r\n    newBagId = `${action.payload.bagId} ${parseInt(i, 10) + 1}`;\r\n  } else if (!folder.signatures['2']) {\r\n    i = '2';\r\n    newBagId = `${action.payload.bagId.slice(\r\n      0,\r\n      action.payload.bagId.length - 1\r\n    )} ${suffix}`;\r\n  } else {\r\n    console.error('Signature 0, 1 and 2 are already on document');\r\n    return;\r\n  }\r\n\r\n  const signedDocument = {\r\n    ...folder,\r\n    date: folder.date,\r\n  };\r\n\r\n  const fileDocument = {\r\n    ...signedDocument,\r\n  } as Folder;\r\n\r\n  let recipient = \"\";\r\n  if (fileDocument.scheme) {\r\n    recipient = fileDocument.scheme[parseInt(i) % 3];\r\n  }\r\n\r\n  let toBoxId;\r\n  if (recipient) {\r\n    const parsedDid = parse(recipient);\r\n    toBoxId = parsedDid.path?.substring(1);\r\n  }\r\n  \r\n  const { jws, linkedBlock } = yield did.createDagJWS(fileDocument);\r\n  const jwe = yield did.createDagJWE(\r\n    { jws: jws, data: encodeBase64(linkedBlock) },\r\n    [recipient],\r\n    {\r\n      protectedHeader: {\r\n        alg: 'A256GCMKW',\r\n      },\r\n    }\r\n  );\r\n\r\n   \r\n  const stringifiedJws = JSON.stringify(jwe, replacer);\r\n  const deflatedJws = deflate(stringifiedJws);\r\n  const gzipped = Buffer.from(deflatedJws).toString('base64');\r\n\r\n\r\n  const payload = {\r\n      masterRegistryUri: action.payload.registryUri,\r\n      purseId: '0',\r\n      contractId: `store`,\r\n      boxId: state.reducer.user,\r\n      toBoxId: toBoxId,\r\n      quantity: 1,\r\n      withdrawQuantity: 1,\r\n      data: gzipped,\r\n      newId: newBagId,\r\n      merge: true,\r\n      price: 1,\r\n      publicKey: publicKey,\r\n    }\r\n\r\n  did.deauthenticate();\r\n  \r\n  const term = purchaseAndWithdrawTerm(payload);\r\n\r\n  let validAfterBlockNumberResponse;\r\n  try {\r\n    validAfterBlockNumberResponse = JSON.parse(\r\n      yield rchainToolkit.http.blocks(state.reducer.readOnlyUrl, {\r\n        position: 1,\r\n      })\r\n    )[0].blockNumber;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw new Error('Unable to get last finalized block');\r\n  }\r\n  \r\n  const timestamp = new Date().getTime();\r\n  //const vab = yield validAfterBlockNumber(state.reducer.readOnlyUrl);\r\n  const pd = yield prepareDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    publicKey as string,\r\n    timestamp\r\n  );\r\n\r\n  const deployOptions = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term,\r\n    privateKey,\r\n    publicKey as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n  const deployResponse = yield rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions);\r\n  if (deployResponse.startsWith('\"Success!')) {\r\n    Swal.fire({\r\n      text: 'Attestation is in progress',\r\n      showConfirmButton: false\r\n    });\r\n  }\r\n\r\n  yield waitForUnforgeable(JSON.parse(pd).names[0], state.reducer.readOnlyUrl);\r\n  store.dispatch(push('/PoC/#/doc'));\r\n  notify();\r\n\r\n  yield put({\r\n    type: 'PURCHASE_BAG_COMPLETED',\r\n    payload: {},\r\n  });\r\n\r\n\r\n  return true;\r\n};\r\n\r\nexport const reuploadBagDataSaga = function*() {\r\n  yield takeEvery('REUPLOAD_BAG_DATA', reuploadBagData);\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport { deflate } from 'pako';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID } from 'dids';\r\n//import { parse } from 'did-resolver';\r\nimport { encodeBase64 } from 'dids/lib/utils';\r\n\r\nimport { Folder, store, getBagsData } from '../';\r\nimport replacer from '../../utils/replacer';\r\nimport prepareDeploy from '../../utils/prepareDeploy';\r\nimport waitForUnforgeable from '../../utils/waitForUnforgeable';\r\n//import validAfterBlockNumber from '../../utils/validAfterBlockNumber';\r\nimport { getPrivateKey, HistoryState } from '../index';\r\nimport { push } from 'connected-react-router';\r\n\r\nconst { createPursesTerm } = require('rchain-token');\r\n\r\nfunction notify() {\r\n  Swal.fire({\r\n      title: 'Success!',\r\n      text: 'Publishing complete',\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      didClose: () => {\r\n        localStorage.setItem('tour', '3');\r\n        window.location.reload();\r\n      }\r\n  })\r\n}\r\n\r\nconst publishBagData = function*(action: {\r\n  type: string;\r\n  payload: { bagId: string; registryUri: string, price: number, fees: Array<{\r\n    revAddress: string;\r\n    fraction100: number;\r\n}>};\r\n}) {\r\n  console.log('reuploload-bag-data', action.payload);\r\n  const state: HistoryState = store.getState();\r\n  const bagsData = getBagsData(state);\r\n\r\n  const publicKey = state.reducer.publicKey;\r\n  const privateKey = yield getPrivateKey(state);\r\n  //const revAddr = rchainToolkit.utils.revAddressFromPublicKey(publicKey || \"\");\r\n\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  const folder =\r\n    bagsData[`${action.payload.registryUri}/${action.payload.bagId}`];\r\n  if (!folder) {\r\n    console.error('bagData/document not found');\r\n    return;\r\n  }\r\n\r\n  let newBagId = action.payload.bagId;\r\n\r\n  const signedDocument = {\r\n    ...folder,\r\n    date: folder.date,\r\n  };\r\n\r\n  const fileDocument = {\r\n    ...signedDocument,\r\n  } as Folder;\r\n\r\n  \r\n  const { jws, linkedBlock } = yield did.createDagJWS(fileDocument);\r\n  const jwsToken = { jws: jws, data: encodeBase64(linkedBlock) };\r\n\r\n  const stringifiedJws = JSON.stringify(jwsToken, replacer);\r\n  const deflatedJws = deflate(stringifiedJws);\r\n  const gzipped = Buffer.from(deflatedJws).toString('base64');\r\n\r\n  let parsedPriceInDust = action.payload.price * 100000000;\r\n\r\n  const payload = {\r\n    purses: {\r\n      [newBagId]: {\r\n        id: newBagId,\r\n        boxId: state.reducer.user,\r\n        type: '0',\r\n        quantity: 1,\r\n        price: parsedPriceInDust,\r\n        //fees: action.payload.fees\r\n      }\r\n    },\r\n    data: {\r\n      [newBagId]: gzipped\r\n    },\r\n    masterRegistryUri: state.reducer.registryUri,\r\n    contractId: \"public_store\",\r\n    boxId: state.reducer.user,\r\n  };\r\n\r\n  did.deauthenticate();\r\n  \r\n  const term = createPursesTerm(payload);\r\n  \r\n  let validAfterBlockNumberResponse;\r\n  try {\r\n    validAfterBlockNumberResponse = JSON.parse(\r\n      yield rchainToolkit.http.blocks(state.reducer.readOnlyUrl, {\r\n        position: 1,\r\n      })\r\n    )[0].blockNumber;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw new Error('Unable to get last finalized block');\r\n  }\r\n  \r\n  const timestamp = new Date().getTime();\r\n  const pd = yield prepareDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    publicKey as string,\r\n    timestamp\r\n  );\r\n\r\n  const deployOptions = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term,\r\n    privateKey,\r\n    publicKey as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n  const deployResponse = yield rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions);\r\n  if (deployResponse.startsWith('\"Success!')) {\r\n    Swal.fire({\r\n      text: 'Publishing is in progress',\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n  \r\n  yield waitForUnforgeable(JSON.parse(pd).names[0], state.reducer.readOnlyUrl);\r\n  store.dispatch(push('/PoC/#/doc'));\r\n  notify();\r\n\r\n  yield put({\r\n    type: 'PURCHASE_BAG_COMPLETED',\r\n    payload: {},\r\n  });\r\n\r\n  return true;\r\n};\r\n\r\nexport const publishBagDataSaga = function*() {\r\n  yield takeEvery('PUBLISH_BAG_DATA', publishBagData);\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\n//import { deflate } from 'pako';\r\n//import { v4 } from 'uuid';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID } from 'dids';\r\n//import { parse } from 'did-resolver';\r\n//import { encodeBase64 } from 'dids/lib/utils';\r\n\r\nimport { store, getBagsData } from '../';\r\n//import replacer from '../../utils/replacer';\r\nimport prepareDeploy from '../../utils/prepareDeploy';\r\nimport waitForUnforgeable from '../../utils/waitForUnforgeable';\r\n//import validAfterBlockNumber from '../../utils/validAfterBlockNumber';\r\nimport { getPrivateKey, HistoryState } from '../index';\r\n//import { Users } from '../../users/users';\r\n\r\nconst { purchaseTerm, readPursesDataTerm } = require('rchain-token');\r\n\r\nfunction notify(step: string) {\r\n  Swal.fire({\r\n      title: 'Success!',\r\n      text: 'Purchase complete',\r\n      showConfirmButton: false,\r\n      timer: 5000,\r\n      didClose: () => {\r\n        localStorage.setItem('tour', step);\r\n        window.location.reload();\r\n      }\r\n  })\r\n}\r\n\r\nconst purchaseBag = function*(action: {\r\n  type: string;\r\n  payload: { bagId: string; registryUri: string, price: number, step: string };\r\n}) {\r\n  console.log('purchase-bag', action.payload);\r\n  const state: HistoryState = store.getState();\r\n    const bagsData = getBagsData(state);\r\n    console.log(bagsData);\r\n\r\n  const publicKey = state.reducer.publicKey;\r\n  const privateKey = yield getPrivateKey(state);\r\n\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  const folder =\r\n      bagsData[`${action.payload.registryUri}/${action.payload.bagId}`];\r\n    console.log(folder);\r\n  if (!folder) {\r\n    console.error('bagData/document not found');\r\n    return;\r\n  }\r\n\r\n  let newBagId = action.payload.bagId;\r\n\r\n\r\n  did.deauthenticate();\r\n\r\n  let readPursesDataResult;\r\n\r\n  const term3 = readPursesDataTerm(\r\n    {\r\n      masterRegistryUri: action.payload.registryUri,\r\n      pursesIds: [newBagId],\r\n      contractId: `public_store`,\r\n    });\r\n    readPursesDataResult = yield rchainToolkit.http.exploreDeploy(\r\n      state.reducer.readOnlyUrl,\r\n      {\r\n        term: term3\r\n      }\r\n    )\r\n\r\n    let bagData: any;\r\n    if (readPursesDataResult) {\r\n      bagData = rchainToolkit.utils.rhoValToJs(JSON.parse(readPursesDataResult).expr[0]);\r\n    }\r\n\r\n  const payload = {\r\n    masterRegistryUri: action.payload.registryUri,\r\n    purseId: newBagId,\r\n    contractId: `public_store`,\r\n    boxId: state.reducer.user,\r\n    quantity: 1,\r\n    newId: null,\r\n    merge: true,\r\n    data: bagData[newBagId],\r\n    price: action.payload.price,\r\n    publicKey: publicKey,\r\n  }\r\n\r\n\r\n  const term2 = purchaseTerm(payload);\r\n\r\n  let validAfterBlockNumberResponse;\r\n  try {\r\n    validAfterBlockNumberResponse = JSON.parse(\r\n      yield rchainToolkit.http.blocks(state.reducer.readOnlyUrl, {\r\n        position: 1,\r\n      })\r\n    )[0].blockNumber;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw new Error('Unable to get last finalized block');\r\n  }\r\n\r\n  const timestamp = new Date().getTime();\r\n  const pd = yield prepareDeploy(\r\n    state.reducer.readOnlyUrl,\r\n    publicKey as string,\r\n    timestamp\r\n  );\r\n\r\n  const deployOptions = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term2,\r\n    privateKey,\r\n    publicKey as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n    /*\r\n  const deployOptions2 = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term,\r\n    PRIVATE_KEY,\r\n    PUBLIC_KEY as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n  */\r\n\r\n  const deployResponse = yield rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions);\r\n  if (deployResponse.startsWith('\"Success!')) {\r\n    Swal.fire({\r\n      text: 'Purchase is in progress',\r\n      showConfirmButton: false,\r\n    });\r\n  }\r\n  \r\n  yield waitForUnforgeable(JSON.parse(pd).names[0], state.reducer.readOnlyUrl);\r\n\r\n  notify(action.payload.step);\r\n    \r\n  yield put({\r\n    type: 'PURCHASE_BAG_COMPLETED',\r\n    payload: {},\r\n  });\r\n\r\n  return true;\r\n};\r\n\r\nexport const purchaseBagSaga = function*() {\r\n  yield takeEvery('PURCHASE_BAG', purchaseBag);\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\n//import { deflate } from 'pako';\r\n//import { v4 } from 'uuid';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from 'rchain-did-resolver';\r\nimport { Secp256k1Provider } from 'key-did-provider-secp256k1';\r\nimport { DID } from 'dids';\r\n//import { parse } from 'did-resolver';\r\n//import { encodeBase64 } from 'dids/lib/utils';\r\n\r\nimport { store, getBagsData } from '../';\r\n//import replacer from '../../utils/replacer';\r\nimport { getPrivateKey, HistoryState } from '../index';\r\n//import { Users } from '../../users/users';\r\n\r\nconst { updatePursePriceTerm } = require('rchain-token');\r\n\r\nconst sellBag = function*(action: {\r\n  type: string;\r\n  payload: { bagId: string; registryUri: string, price: number };\r\n}) {\r\n  console.log('sell-bag', action.payload);\r\n  const state: HistoryState = store.getState();\r\n    const bagsData = getBagsData(state);\r\n    console.log(bagsData);\r\n\r\n  const publicKey = state.reducer.publicKey;\r\n  const privateKey = yield getPrivateKey(state);\r\n\r\n  const did = new DID({\r\n    resolver: { ...(yield getRchainResolver()), ...KeyResolver.getResolver() },\r\n  });\r\n  const authSecret = Buffer.from(privateKey, 'hex');\r\n  const provider = new Secp256k1Provider(authSecret);\r\n\r\n  yield did.authenticate({ provider: provider });\r\n\r\n  const folder =\r\n      bagsData[`${action.payload.registryUri}/${action.payload.bagId}`];\r\n    console.log(folder);\r\n  if (!folder) {\r\n    console.error('bagData/document not found');\r\n    return;\r\n  }\r\n\r\n  let newBagId = action.payload.bagId;\r\n\r\n\r\n  did.deauthenticate();\r\n\r\n  const payload = { masterRegistryUri: action.payload.registryUri,\r\n    boxId: state.reducer.user,\r\n    contractId: `public_store`,\r\n    price: action.payload.price,\r\n    purseId: newBagId }\r\n\r\n  const term2 = updatePursePriceTerm(payload);\r\n\r\n  let validAfterBlockNumberResponse;\r\n  try {\r\n    validAfterBlockNumberResponse = JSON.parse(\r\n      yield rchainToolkit.http.blocks(state.reducer.readOnlyUrl, {\r\n        position: 1,\r\n      })\r\n    )[0].blockNumber;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw new Error('Unable to get last finalized block');\r\n  }\r\n\r\n  const timestamp = new Date().getTime();\r\n  const deployOptions = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term2,\r\n    privateKey,\r\n    publicKey as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n    /*\r\n  const deployOptions2 = yield rchainToolkit.utils.getDeployOptions(\r\n    'secp256k1',\r\n    timestamp,\r\n    term,\r\n    PRIVATE_KEY,\r\n    PUBLIC_KEY as string,\r\n    1,\r\n    4000000000,\r\n    validAfterBlockNumberResponse\r\n  );\r\n  */\r\n\r\n  yield rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions);\r\n\r\n  //rchainToolkit.http.deploy(state.reducer.validatorUrl, deployOptions2);\r\n    \r\n  yield put({\r\n    type: 'SELL_BAG_COMPLETED',\r\n    payload: {},\r\n  });\r\n    \r\n    Swal.fire({\r\n      text: 'Listing is in progress',\r\n      showConfirmButton: false,\r\n      timer: 15000,\r\n    });\r\n\r\n    function notify() {\r\n        Swal.fire({\r\n            title: 'Success!',\r\n            text: 'Listing complete',\r\n            showConfirmButton: false,\r\n            timer: 10000,\r\n        })\r\n    }\r\n    setTimeout(() => { notify() }, 15000);\r\n\r\n    localStorage.setItem('tour', '5');\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 15000);\r\n  return true;\r\n};\r\n\r\nexport const sellBagSaga = function*() {\r\n  yield takeEvery('SELL_BAG', sellBag);\r\n};\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 339;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t707,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 340;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  IonChip,\r\n  IonLabel\r\n} from '@ionic/react';\r\n\r\nimport { QRCodeRenderersOptions, toCanvas } from \"qrcode\";\r\n\r\nimport './QRCodeComponent.scoped.scss';\r\n\r\ninterface QRCodeComponentProps {\r\n  url: string\r\n}\r\nconst QRCodeComponent: React.FC<QRCodeComponentProps> = ({ url }) => {\r\n  const qrcodecanvas = React.useRef(null);\r\n\r\n  const [enlarged, setEnlarged] = useState(false);\r\n\r\n  const ToggleSize = () => {\r\n    setEnlarged(!enlarged);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Update qr code\r\n    if (url) {\r\n      const opts = {\r\n        errorCorrectionLevel: \"H\",\r\n        width: enlarged ? 220 : 100,\r\n        height: enlarged ? 220 : 100,\r\n        margin: 1\r\n      } as QRCodeRenderersOptions;\r\n\r\n      toCanvas(\r\n        qrcodecanvas.current,\r\n        url,\r\n        opts\r\n      ).then(res => {\r\n        console.info(\"QRCode created\");\r\n        console.info(res);\r\n      });\r\n    }\r\n  }, [url, enlarged]);\r\n\r\n  return (\r\n    <IonChip className={enlarged ? \"QRContainer large\" : \"QRContainer small\"} color=\"tertiary\" onClick={() => {\r\n      ToggleSize();\r\n    }}>\r\n      <canvas ref={qrcodecanvas} className=\"Image\" />\r\n      <IonLabel color=\"dark\">Scan to view</IonLabel>\r\n    </IonChip>\r\n  );\r\n};\r\n\r\nexport default QRCodeComponent;\r\n","import React, { useState } from 'react';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport {\r\n  IonLabel,\r\n  //IonButton,\r\n  IonSlide,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n} from '@ionic/react';\r\nimport './IdentityScreen.scoped.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { HistoryState /*, store*/ } from '../../store';\r\nimport QRCodeComponent from '../QRCodeComponent';\r\n//import { Users } from '../../users/users';\r\n//import Avatar from '../../assets/avatar.jpg';\r\n\r\ninterface IdentityScreenComponentProps {\r\n  registryUri: string | undefined;\r\n  user: string | undefined;\r\n  publicKey: string;\r\n}\r\nconst IdentityScreenComponent: React.FC<IdentityScreenComponentProps> = (props) => {\r\n  const [balance, setBalance] = useState<number>();\r\n  //const state: HistoryState = store.getState();\r\n\r\n  const READ_ONLY_HOST = 'https://gracious-pare-6c4c99.netlify.app';\r\n  const main = async () => {\r\n    const term = `new return, rl(\\`rho:registry:lookup\\`), RevVaultCh, vaultCh, balanceCh in {\r\n    rl!(\\`rho:rchain:revVault\\`, *RevVaultCh) |\r\n    for (@(_, RevVault) <- RevVaultCh) {\r\n      @RevVault!(\"findOrCreate\", \"${rchainToolkit.utils.revAddressFromPublicKey(props.publicKey)}\", *vaultCh) |\r\n      for (@(true, vault) <- vaultCh) {\r\n        @vault!(\"balance\", *balanceCh) |\r\n        for (@balance <- balanceCh) { return!(balance) }\r\n      }\r\n    }\r\n  }`;\r\n\r\n    try {\r\n      const result = await rchainToolkit.http.exploreDeploy(READ_ONLY_HOST, {\r\n        term: term,\r\n      });\r\n\r\n      const data = rchainToolkit.utils.rhoValToJs(JSON.parse(result).expr[0]);\r\n      const revBalance = data * (1 / 100000000);\r\n      console.log(revBalance);\r\n      setBalance(revBalance);\r\n    } catch (e) {\r\n      return \"error\";\r\n    }\r\n  }\r\n  main();\r\n  /*\r\n  const shortenName = () => {\r\n    return \"did:rchain:\" + props.registryUri?.substring(0, 6) + \"...\" + props.registryUri?.substring(48, 54)\r\n  }\r\n  */\r\n\r\n  const qrCodeContent = () => {\r\n    return `did:rchain:${props.registryUri}/${props.user}`;\r\n  }\r\n\r\n  return (\r\n    <IonSlide>\r\n      <IonGrid>\r\n        {/* (<img className=\"Avatar\" src={Avatar} alt=\"Avatar\" />) */}\r\n        <QRCodeComponent\r\n          url={qrCodeContent()}\r\n        />\r\n        <IonRow>\r\n          <IonCol>\r\n            <IonLabel>{props.user}</IonLabel>\r\n          </IonCol>\r\n        </IonRow>\r\n        {/* <IonRow>\r\n          <IonCol>\r\n            {(props.registryUri ? <IonLabel>{shortenName()}</IonLabel> : undefined)}\r\n          </IonCol>\r\n        </IonRow> */}\r\n        {/* <IonRow>\r\n          <IonCol>\r\n            <IonButton color=\"primary\">Backup Identity</IonButton>\r\n          </IonCol>\r\n        </IonRow>\r\n        <IonRow>\r\n          <IonCol>\r\n            <IonButton color=\"primary\">Remove Identity</IonButton>\r\n          </IonCol>\r\n        </IonRow> */}\r\n        <IonRow>\r\n          <IonCol>\r\n            <IonLabel>REV Balance: <p className=\"balance\">{ balance }</p></IonLabel>\r\n          </IonCol>\r\n        </IonRow>\r\n      </IonGrid>\r\n    </IonSlide>\r\n  )\r\n};\r\n\r\nconst IdentityScreen = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      registryUri: state.reducer.registryUri,\r\n      user: state.reducer.user,\r\n      publicKey: state.reducer.publicKey? state.reducer.publicKey : \"\",\r\n    }\r\n  },\r\n  (dispatch: Dispatch) => { }\r\n)(IdentityScreenComponent);\r\n\r\nexport default IdentityScreen;\r\n","export default __webpack_public_path__ + \"static/media/logo.d52e039a.png\";","import { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as rchainToolkit from 'rchain-toolkit';\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonRouterOutlet,\r\n  IonLoading,\r\n  IonButton,\r\n  IonIcon,\r\n  IonSlides,\r\n  IonSlide,\r\n  IonLabel,\r\n  IonImg,\r\n} from '@ionic/react';\r\n\r\nimport {IonReactHashRouter } from '@ionic/react-router'\r\nimport './App.scss';\r\nimport './App.scoped.css';\r\nimport { Bag, HistoryState } from './store';\r\n\r\nimport IdentityScreen from './components/identity/IdentityScreen';\r\n\r\nimport { personCircle, closeCircleOutline } from 'ionicons/icons';\r\n\r\nimport { Device } from \"@capacitor/device\";\r\n\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { useTour } from '@reactour/tour';\r\nimport Logo from './assets/logo.png';\r\n\r\nconst LoginView = React.lazy(() => import('./views/LoginView'));\r\nconst DockListView = React.lazy(() => import('./views/DocListView'));\r\nconst PublicStore = React.lazy(() => import('./views/PublicStoreView'));\r\n\r\ninterface AppProps {\r\n  authorised: boolean;\r\n  isLoading: boolean;\r\n  registryUri: undefined | string;\r\n  user: string;\r\n  bags: { [id: string]: Bag };\r\n  init: (a: { registryUri: string; privateKey: string; user: string }) => void;\r\n  setPlatform: (platform: string) => void;\r\n  setUser: (user: string) => void;\r\n}\r\n\r\ninterface Demo {\r\n  id: string;\r\n  masterRegistryUri: string;\r\n  publisherPrivKey: string;\r\n  attestorPrivKey: string;\r\n  alicePrivKey: string;\r\n  bobPrivKey: string;\r\n}\r\n\r\nconst AppComponent: React.FC<AppProps> = props => {\r\n  const redfill = React.useRef(null);\r\n  const [showIdentity, setShowIdentity] = useState(false);\r\n  const [demo, setDemo] = useState<Demo>();\r\n\r\n  const { setIsOpen, setCurrentStep, setSteps, currentStep } = useTour();\r\n\r\n  const identity: any = localStorage.getItem('user'); //TODO\r\n\r\n    props.setUser(identity);\r\n    console.log(identity);\r\n  /*\r\n  const shortenName = () => {\r\n    return \"did:rchain:\" + props.registryUri?.substring(0, 6) + \"...\" + props.registryUri?.substring(48, 54)\r\n  }\r\n  */\r\n\r\n  const ToggleIdentityView = () => {\r\n    setShowIdentity(!showIdentity);\r\n    console.info(showIdentity);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const params = queryString.parse(window.location.search) || {};\r\n    console.info(\"params:\");\r\n    console.info(params);\r\n    \r\n    if (params && params.step) {\r\n      const step = params.step || '0';\r\n      localStorage.setItem('tour', step as string);\r\n    }\r\n    /*\r\n    setDemo({\r\n      id: \"2\",\r\n      masterRegistryUri: \"uq8guq3eazq8a3gsqzicnb86tep6jah46fcb5ga4s4o3uwgic3xjix\",\r\n      publisherPrivKey: \"97b1744400bf6e7163418f3f67325921e8bc504bd09f3f20a5d864a41d05dfd9\",\r\n      attestorPrivKey: \"f1b59bd5dc94fe4c34d1ea4862183b44d4f075036733f319b0e8cd7a1d1c6dc5\",\r\n      alicePrivKey: \"ea6163135d7090822009495a526c124d6943c5d57b218e430dbce55c32a7aa8e\",\r\n      bobPrivKey: \"429e2d42008ca2c29da5826902d875086087e02fc7e3d00bd7f38ecac33dcdd8\"\r\n    });\r\n    */\r\n    \r\n      const existingDemo = localStorage.getItem('demo');\r\n      if (existingDemo && Object.keys(existingDemo).length > 0) {\r\n        const demo = JSON.parse(existingDemo);\r\n        console.info(\"DEMO:\");\r\n        console.info(demo);\r\n        setDemo(demo);\r\n      }\r\n      else {\r\n        axios.get('https://thirsty-villani-4b6e68.netlify.app/pop').then(function (response) {\r\n          // handle success\r\n          console.info(response);\r\n          const demo = response.data as Demo;\r\n          setDemo(demo);\r\n          if (Object.keys(demo).length > 0) {\r\n            localStorage.setItem('demo', JSON.stringify(demo));\r\n            setIsOpen(true);\r\n          }\r\n        })\r\n      }\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Device.getInfo().then(info => {\r\n      props.setPlatform(info.platform);\r\n    });\r\n  });\r\n\r\n  const slideOpts: Record<string, unknown> = {\r\n    initialSlide: 0,\r\n    speed: 400,\r\n  };\r\n\r\n  const onSlideChanged = (event: any) => {\r\n    event.target.getActiveIndex().then((value: any) => {\r\n      console.info(value);\r\n    });\r\n  };\r\n\r\n  function reload() {\r\n    setTimeout(() => {\r\n    window.location.reload();\r\n  }, 100);\r\n  }\r\n\r\n\r\n  if (!props.authorised) {\r\n    return (\r\n      <IonReactHashRouter>\r\n      <IonRouterOutlet id=\"main\">\r\n\r\n        <Route\r\n          exact\r\n          path=\"/user\"\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"user\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/user/new\"\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"new\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/user/restore\"\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"restore\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"user\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"*\"\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"user\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n        { /*\r\n        <Route\r\n          path=\"*\"\r\n          render={rprops => (\r\n            <Suspense fallback={<IonLoading isOpen={true} />}>\r\n              <LoginView action=\"user\" key={rprops.location.pathname} demo={demo}/>\r\n            </Suspense>\r\n          )}\r\n        />\r\n          */ }\r\n      </IonRouterOutlet>\r\n      </IonReactHashRouter>\r\n    );\r\n  }\r\n\r\n  return (\r\n    \r\n    <IonPage id=\"home-page\">\r\n      \r\n      <IonHeader no-border no-shadow className=\"ion-no-border\">\r\n        <IonToolbar className=\"noSafeAreaPaddingTop\">\r\n          <IonImg className=\"RPCLogo\" slot=\"start\" src={Logo}></IonImg>\r\n          <IonTitle className=\"title\"\r\n            onClick={() => {\r\n           reload()\r\n          }}\r\n          >RChain Publishing</IonTitle>\r\n          \r\n          <IonButton\r\n            slot=\"end\"\r\n            icon-only\r\n            color=\"none\"\r\n            class=\"ProfileButton\"\r\n            onClick={() => {\r\n              ToggleIdentityView();\r\n            }}\r\n          >\r\n            {showIdentity ? (\r\n              <IonIcon icon={closeCircleOutline} size=\"large\" />\r\n            ) : (\r\n                <div className=\"UserInfo\" >\r\n                  <IonLabel>{props.user}</IonLabel>\r\n                  <IonIcon icon={personCircle} size=\"large\" />\r\n                </div>\r\n              )}\r\n          </IonButton>\r\n        </IonToolbar>\r\n        <div\r\n          className={showIdentity ? 'RedFill show' : 'RedFill hide'}\r\n          ref={redfill}\r\n        >\r\n          <IonContent className=\"IdentityBG\">\r\n            <div\r\n              className={\r\n                showIdentity ? 'ProfilePanel show' : 'ProfilePanel hide'\r\n              }\r\n            >\r\n              <div className=\"ArrowLeft\" />\r\n              <div className=\"ArrowRight\" />\r\n              <IonSlides\r\n                class=\"IdentityList\"\r\n                options={slideOpts}\r\n                pager={true}\r\n                onIonSlideDidChange={onSlideChanged}\r\n              >\r\n                <IonSlide className=\"IdentitySlide\">\r\n                  <IdentityScreen />\r\n                </IonSlide>\r\n              </IonSlides>\r\n            </div>\r\n          </IonContent>\r\n        </div>\r\n      </IonHeader>\r\n      <IonContent>\r\n        { /*<RChainLogo className=\"BackgroundLogo\" /> */ }\r\n\r\n        {\r\n          (identity === \"buyer\" || identity === \"buyer2\") ? (\r\n                  <Suspense fallback={<IonLoading isOpen={true} />}>\r\n                    <PublicStore\r\n                      registryUri={props.registryUri as string}\r\n                      action=\"list\"\r\n                    />\r\n                  </Suspense>\r\n          )\r\n            :\r\n            (\r\n            <IonReactHashRouter>\r\n            <IonRouterOutlet id=\"main\">\r\n              <Route\r\n                exact\r\n                path=\"/doc/show/:registryUri/:bagId?\"\r\n                render={rprops => (\r\n                  <Suspense fallback={<IonLoading isOpen={true} />}>\r\n                    <DockListView\r\n                      registryUri={rprops.match.params.registryUri}\r\n                      bagId={rprops.match.params.bagId}\r\n                      action=\"show\"\r\n                      key={rprops.location.hash}\r\n                    />\r\n                  </Suspense>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/doc\"\r\n                render={rprops => (\r\n                  <Suspense fallback={<IonLoading isOpen={true} />}>\r\n                    <DockListView\r\n                      registryUri={props.registryUri as string}\r\n                      action=\"list\"\r\n                      key={rprops.location.hash}\r\n                    />\r\n                  </Suspense>\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/doc/upload\"\r\n                render={rprops => (\r\n                  <Suspense fallback={<IonLoading isOpen={true} />}>\r\n                    <DockListView\r\n                      registryUri={props.registryUri as string}\r\n                      action=\"upload\"\r\n                      key={rprops.location.hash}\r\n                    />\r\n                  </Suspense>\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/\"\r\n                render={({ location }) => (\r\n                  <Redirect\r\n                    to={{\r\n                      pathname: '/doc',\r\n                      state: { from: location },\r\n                    }}\r\n                  />\r\n                )}\r\n                exact\r\n              />\r\n            </IonRouterOutlet>\r\n            </IonReactHashRouter>\r\n          )\r\n        }\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport const App = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      authorised: state.reducer.authorised,\r\n      registryUri: state.reducer.registryUri,\r\n      user: state.reducer.user,\r\n      bags: state.reducer.bags,\r\n      isLoading: state.reducer.isLoading,\r\n    };\r\n  },\r\n  (dispatch: Dispatch) => {\r\n    return {\r\n      init: (a: { registryUri: string; privateKey: string; user: string}) => {\r\n        dispatch({\r\n          type: 'INIT',\r\n          payload: {\r\n            privateKey: a.privateKey,\r\n            publicKey: rchainToolkit.utils.publicKeyFromPrivateKey(\r\n              a.privateKey as string\r\n            ),\r\n            registryUri: a.registryUri,\r\n            user: a.user\r\n          },\r\n        });\r\n      },\r\n      setPlatform: (platform: string) => {\r\n        dispatch({\r\n          type: 'SET_PLATFORM',\r\n          payload: {\r\n            platform: platform,\r\n          },\r\n        });\r\n      },\r\n      setUser: (user: string) => {\r\n        dispatch({\r\n          type: 'SET_USER',\r\n          payload: {\r\n            user: user,\r\n          }\r\n        })\r\n      }\r\n    };\r\n  }\r\n)(AppComponent);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { IonApp } from '@ionic/react';\r\nimport { App as MainApp } from './App';\r\n\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n//import './theme/darkvariables.css';\r\n\r\nimport { TourProvider } from '@reactour/tour'\r\n\r\n// configure the tour\r\nconst steps = [\r\n  {\r\n    selector: '.attestation-step-start',\r\n    content: 'Login as Publisher to upload a photo.',\r\n  },\r\n  \r\n  // ...\r\n]\r\n\r\nconst App: React.FC = () => (\r\n  <IonApp>\r\n    <TourProvider steps={steps} showBadge={false} showCloseButton={false} showPrevNextButtons={false} showNavigation={true} onClickMask={() => {console.info(\"closing\")}}>\r\n      <MainApp></MainApp>\r\n    </TourProvider>\r\n  </IonApp>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './Root';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store, history } from \"./store/\";\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Root />\r\n    </ConnectedRouter>\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);\r\n","import * as rchainToolkit from 'rchain-toolkit';\r\n\r\nconst prepareDeploy = async (\r\n    httpUrlReadOnly: string,\r\n    publicKey: string,\r\n    timestamp: number\r\n  ) => {\r\n    let prepareDeployResponse;\r\n    try {\r\n      prepareDeployResponse = await rchainToolkit.http.prepareDeploy(\r\n        httpUrlReadOnly,\r\n        {\r\n          deployer: publicKey,\r\n          timestamp: timestamp,\r\n          nameQty: 1,\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error('Unable to prepare deploy');\r\n    }\r\n  \r\n    return prepareDeployResponse;\r\n  };\r\n\r\n  export default prepareDeploy;","const rchainToolkit = require(\"rchain-toolkit\");\r\n\r\nconst waitForUnforgeable = (name: string, readOnlyUrl: string) => {\r\n    try {\r\n      return new Promise((resolve, reject) => {\r\n        const interval = setInterval(() => {\r\n          try {\r\n            let resp: string | undefined = undefined;\r\n            rchainToolkit.http\r\n              .dataAtName(readOnlyUrl, {\r\n                name: {\r\n                  UnforgPrivate: { data: name },\r\n                },\r\n                depth: 3,\r\n              })\r\n              .then((dataAtNameResponse: string) => {\r\n                resp = dataAtNameResponse;\r\n                if (\r\n                  resp &&\r\n                  JSON.parse(resp) &&\r\n                  JSON.parse(resp).exprs &&\r\n                  JSON.parse(resp).exprs.length\r\n                ) {\r\n                  resolve(resp);\r\n                  clearInterval(interval);\r\n                } else {\r\n                  console.log('  .');\r\n                }\r\n              })\r\n              .catch((err: string) => {\r\n                console.log(resp);\r\n                console.log(err);\r\n                throw new Error('wait for unforgeable name');\r\n              });\r\n          } catch (err) {\r\n            console.log(err);\r\n            throw new Error('wait for unforgeable name');\r\n          }\r\n        }, 4000);\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error('wait for unforgeable name');\r\n    }\r\n  };\r\n\r\nexport default waitForUnforgeable;","export const addressFromPurseId = (registryUri: string, bagId: string) => registryUri + '/' + bagId","// Spec http://www.ecma-international.org/ecma-262/6.0/#sec-json.stringify\r\nconst replacer = (key: unknown, value: { [x: string]: unknown }) =>\r\n  value instanceof Object && !(value instanceof Array)\r\n    ? Object.keys(value)\r\n        .sort()\r\n        .reduce((sorted: any, key) => {\r\n          sorted[key] = value[key];\r\n          return sorted;\r\n        }, {})\r\n    : value;\r\n\r\nexport default replacer;"],"sourceRoot":""}