{"version":3,"sources":["utils/bagIdFromAddress.ts","components/dummy/DummyBagItem.tsx","utils/checkSignature.ts","components/ModalDocument.tsx","components/ModalUploadDocument.tsx","../../../src/index.ts","components/Horizontal.tsx","components/BagItem.tsx","views/DocListView.tsx"],"names":["bagIdFromAddress","address","split","slice","join","DummyBagItem","id","detail","className","icon","document","size","color","animated","style","width","checkSignature","folder","s","a","DID","getRchainResolver","KeyResolver","getResolver","resolver","did","signature","signatures","kid","base64urlToJSON","protected","resolve","res","doc2","Object","assign","included","fromEntries","entries","filter","key","parseInt","encodePayload","cid","payloadCid","encodeBase64Url","bytes","signer","verifyJWS","publicKey","scheme","console","info","attestSteps","selector","content","publisherSteps","publishSteps","ModalDocument","connect","state","bags","reducer","bagsData","platform","getPlatform","user","dispatch","loadBag","registryUri","bagId","type","payload","reupload","publish","price","fees","props","history","useHistory","priceInput","React","useRef","useState","setPrice","isAttesting","setIsAttesting","isPublishing","setIsPublishing","payees","Map","pdfjs","GlobalWorkerOptions","workerSrc","version","useTour","currentStep","setIsOpen","setCurrentStep","setSteps","useEffect","setTimeout","localStorage","getItem","menuTourStep","current","setFocus","addressFromPurseId","log","areSignaturesValid","Promise","all","keys","reduce","promises","then","values","isSigned","item","lastSignature","undefined","isOpen","onClick","replace","direction","files","map","filename","file","includes","mimeType","mainFile","alt","name","src","data","Fragment","position","ref","class","placeholder","value","onKeyPress","e","onIonChange","inPrice","target","disabled","Component","date","Date","toUTCString","componentSteps","ModalUploadDocumentComponent","dropEl","blobToBase64","blob","reject","reader","FileReader","onerror","onload","result","readAsDataURL","nativeFilePicker","that","FileSelect","select","multiple","extensions","selectedFile","file0","fetch","path","fileResponse","fileBlob","asbase","Buffer","from","toString","setState","saveRef","el","addEventListener","stopPropagation","preventDefault","onDrop","dataTransfer","dropErrors","Array","forEach","handleFile","nameInput","r","match","onloadend","onFileChange","recipient","description","mainFileResolution","attestorSelect","createRef","isUploading","node","this","items","event","maxlength","slot","documentIcon","accept","title","onChange","side","obj","trash","button","upload","ModalUploadDocument","getBags","getBagsData","getPublicKey","withTour","Horizontal","searchText","refresh","setSearchText","onIonRefresh","complete","lines","push","BagItem","onlyCompleted","awaitsSignature","completed","pos","bag","publisher","create","length","DockListView","connected","getConnected","documentsCompleted","getDocumentsCompleted","documentsAwaitingSignature","getDocumentsAwaitingSignature","documentsAddressesInOrder","getDocumentsAddressesInOrder","isLoading","action","x","i","index"],"mappings":"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","file":"static/js/5.d9f1b81d.chunk.js","sourcesContent":["export const bagIdFromAddress = (address: string) => address.split('/').slice(1).join('')","import React from 'react';\r\nimport {\r\n  IonIcon,\r\n  IonItem,\r\n  IonLabel,\r\n  IonSkeletonText\r\n} from '@ionic/react';\r\n\r\nimport '../BagItem.scoped.css';\r\n\r\nimport { document } from 'ionicons/icons';\r\n\r\ninterface DummyBagItemProps {\r\n  id: string;\r\n}\r\nconst DummyBagItem: React.FC<DummyBagItemProps> = ({ id }) => {\r\n  return (\r\n    <IonItem detail={false}>\r\n      <div className=\"IconContainer\">\r\n        <IonIcon icon={document} size=\"large\" color=\"secondary\" />\r\n      </div>\r\n      <IonLabel className=\"ion-text-wrap\">\r\n        <h4>\r\n          <IonSkeletonText animated style={{ width: '80%' }}></IonSkeletonText>\r\n        </h4>\r\n        <h4>\r\n          <IonSkeletonText animated style={{ width: '60%' }}></IonSkeletonText>\r\n        </h4>\r\n      </IonLabel>\r\n    </IonItem>\r\n  );\r\n};\r\n\r\nexport default DummyBagItem;\r\n","import { Folder } from '../store';\r\n\r\nimport KeyResolver from 'key-did-resolver';\r\nimport { getResolver as getRchainResolver } from \"rchain-did-resolver\";\r\nimport { DID } from 'dids';\r\nimport { base64urlToJSON, encodeBase64Url } from 'dids/lib/utils'\r\nimport { verifyJWS } from 'did-jwt'\r\nimport { encodePayload } from 'dag-jose-utils'\r\n\r\nconst checkSignature = async (folder: Folder, s: string) => {\r\n  const did = new DID({ resolver: { ...await getRchainResolver, ...KeyResolver.getResolver() } })\r\n\r\n    const signature = folder.signatures[s];\r\n    const kid = base64urlToJSON(signature.protected).kid;\r\n\r\n    const res = await did.resolve(kid);\r\n    const doc2 = Object.assign({}, folder);\r\n    const included = Object.fromEntries(Object.entries(doc2.signatures).filter(([key, value]) => parseInt(key) < parseInt(s)));\r\n    doc2.signatures = included;\r\n\r\n    const { cid /*, linkedBlock*/ } = await encodePayload(doc2);\r\n    const payloadCid = encodeBase64Url(cid.bytes)\r\n\r\n    try {\r\n      const signer = verifyJWS( signature.protected + \".\" + payloadCid + \".\" + signature.signature, res.publicKey );\r\n      if (signer.id === kid && doc2.scheme && doc2.scheme[s] === signer.id) {\r\n        console.info(s + \" Signature valid\");\r\n        return true;\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.info(s + \" Signature not valid. \" + err);\r\n      return false;\r\n    }\r\n    return false;\r\n};\r\nexport default checkSignature;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  IonContent,\r\n  IonLoading,\r\n  IonButtons,\r\n  IonButton,\r\n  //IonProgressBar,\r\n  //IonIcon,\r\n  IonLabel,\r\n  IonItem,\r\n  IonInput,\r\n  IonChip,\r\n  /*\r\n  IonItemSliding,\r\n  IonItemOption,\r\n  IonItemOptions,\r\n  IonIcon,\r\n  IonRange\r\n  */\r\n  //IonCard,\r\n  //IonCardContent,\r\n} from '@ionic/react';\r\n//import { closeCircle, downloadOutline } from 'ionicons/icons';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { useHistory } from 'react-router';\r\nimport { /*Page,*/ pdfjs, /*Document as PdfDocument*/ } from 'react-pdf';\r\n//import { trash, mailUnreadOutline, lockClosedOutline, lockOpenOutline } from 'ionicons/icons';\r\n\r\n//import QRCodeComponent from './QRCodeComponent';\r\nimport checkSignature from '../utils/checkSignature';\r\nimport { State, HistoryState, getPlatform } from '../store';\r\n\r\nimport './ModalDocument.scoped.css';\r\nimport { addressFromPurseId } from 'src/utils/addressFromPurseId';\r\n\r\nimport { useTour } from '@reactour/tour';\r\n\r\n//import { getResolver as getRchainResolver, Resolver } from \"rchain-did-resolver\";\r\n//import * as rchainToolkit from 'rchain-toolkit';\r\n\r\nexport interface KeyPair {\r\n  privateKey: any;\r\n  publicKey: any;\r\n  publicAddress: string;\r\n}\r\n\r\ninterface ModalDocumentProps {\r\n  state: HistoryState;\r\n  registryUri: string;\r\n  bagId: string;\r\n  bags: State['bags'];\r\n  bagsData: State['bagsData'];\r\n  platform: string;\r\n  user: string;\r\n  loadBag: (registryUri: string, bagId: string, state: HistoryState) => void;\r\n  reupload: (resitryUri: string, bagId: string) => void;\r\n  publish: (resitryUri: string, bagId: string, price: number, fees: Array<{\r\n    revAddress: string;\r\n    fraction100: number;\r\n}>) => void;\r\n}\r\n/*\r\ninterface DocumentInfo {\r\n  numPages: number;\r\n}\r\n*/\r\n\r\n\r\nconst attestSteps = [\r\n  { selector: '.SignatureRequiredBtn', content: 'If the photo looks legit you can now attest it and put your signature.' },\r\n]\r\n\r\nconst publisherSteps = [\r\n  { selector: '.attestation-step-file', content: 'Pick a photo you wish to upload. Image data will be stored on-chain in an encrypted form.' },\r\n  //{ selector: '.attestation-step-main-file', content: 'Set your photo as your main file.' },\r\n  { selector: '.attestation-step-name', content: 'Choose a name for your new NFT.' },\r\n  //{ selector: '.attestation-step-select-attestor', content: 'Click here and appoint an attestor.',\r\n    //highlightedSelectors: [\"ionic-selectable-modal.ion-page\"],\r\n    //mutationObservables: [\"ion-modal.show-modal.modal-interactive\"]\r\n  //},\r\n  { selector: '.attestation-step-upload', content: 'Now press upload to begin the attestation process.' },\r\n  { selector: '.attestation-step-set-price', content: \"How much do you think this is worth? Probably not a lot so we're just going to put a small number for you.\" },\r\n]\r\n\r\nconst publishSteps = [\r\n  { selector: '.attestation-step-set-price', content: \"How much do you think this is worth? Probably not a lot so we're just going to put a small number for you.\" },\r\n  { selector: '.attestation-step-set-price', content: \"Come on now...\" },\r\n  { selector: '.attestation-step-do-publish', content: \"Now press it to mint your first NFT. Image data will be stored on-chain unencrypted.\" },\r\n]\r\n\r\n\r\nconst ModalDocumentComponent: React.FC<ModalDocumentProps> = (\r\n  props: ModalDocumentProps\r\n) => {\r\n  \r\n  const history = useHistory();\r\n  const priceInput = React.useRef<HTMLIonInputElement | null>(null);\r\n  //const pdfcontent64 = '';\r\n  //const [page, setPage] = useState<number>();\r\n\r\n  //const [numPages, setNumPages] = useState<number>();\r\n  const [price, setPrice] = useState<number>();\r\n  const [isAttesting, setIsAttesting] = useState<boolean>(false);\r\n  const [isPublishing, setIsPublishing] = useState<boolean>(false);\r\n  /*\r\n  const [recipientInput, setRecipientInput] = useState<string>();\r\n  const [revAddresses, setRevAddresses] = useState<Map<string, string>>(new Map<string, string>([\r\n  ]));\r\n\r\n  const [payees, setPayees] = useState<Map<string, {revAddress: string, fraction100: number}>>(new Map<string, {revAddress: string, fraction100: number}>([\r\n  ]));\r\n\r\n  const [distribution, setDistribution] = useState<number>(25);\r\n  */\r\n  const payees = new Map<string, {revAddress: string, fraction100: number}>([]); //TMP\r\n  /*\r\n  function onDocumentLoadSuccess(docInfo: DocumentInfo) {\r\n    setNumPages(docInfo.numPages);\r\n  }\r\n  */\r\n\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version\r\n    }/pdf.worker.js`;\r\n\r\n  const { /* isOpen,*/ currentStep, /* steps,*/ setIsOpen, setCurrentStep, setSteps } = useTour()\r\n  //useEffect(() => {\r\n//\r\n  //}, []);\r\n    /*\r\n  useEffect(() => {\r\n    console.info(\"PRICE UPDATE\");\r\n    if (price && price >= 10200) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  }, [price])\r\n*/\r\n\r\n  useEffect(() => {\r\n   \r\n    setTimeout(() => {\r\n      if (props.user === \"publisher\") {\r\n        if (localStorage.getItem('tour')) {\r\n          const menuTourStep = parseInt(localStorage.getItem('tour') || '0');\r\n          if (menuTourStep === 0) {\r\n            setTimeout(() => {\r\n              console.info(\"setSteps(publisherSteps);\");\r\n              setIsOpen(false);\r\n              setSteps(publisherSteps);\r\n              setCurrentStep(0);\r\n              setIsOpen(true);\r\n            }, 100);\r\n          }\r\n          if (menuTourStep === 2) {\r\n            setTimeout(() => {\r\n              console.info(\"setSteps(publishSteps);\");\r\n              setIsOpen(false);\r\n              setSteps(publishSteps);\r\n              setCurrentStep(0);\r\n              setIsOpen(true);\r\n              if (priceInput && priceInput.current) {\r\n                console.info(\"SET PRICE\");\r\n                //(priceInput.current as HTMLIonInputElement).value = 20;\r\n                setPrice(20);\r\n                (priceInput.current as HTMLIonInputElement).setFocus();\r\n                setTimeout(() => {\r\n                  setCurrentStep(2);\r\n                  console.info(\"currentStep: \");\r\n                  console.info(currentStep);\r\n                }, 5000);\r\n              }\r\n            }, 100);\r\n          }\r\n          //else {\r\n          //  setIsOpen(false);\r\n          //}\r\n        }\r\n        else {\r\n          setSteps(publisherSteps);\r\n          setIsOpen(true);\r\n          console.info(\"setSteps(publishSteps);\");\r\n        }\r\n      }\r\n      if (props.user === \"attestor\") {\r\n        setSteps(attestSteps);\r\n        setIsOpen(true);\r\n      }\r\n\r\n    }, 100);\r\n    \r\n    setIsOpen(false);\r\n    props.loadBag(props.registryUri, props.bagId, props.state);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  /*\r\n  const renderLoading = () => {\r\n    return <IonProgressBar color=\"secondary\" type=\"indeterminate\" />;\r\n  };\r\n  */\r\n\r\n  \r\n\r\n  const address = addressFromPurseId(props.registryUri, props.bagId);\r\n\r\n  console.log(props.bagsData[address]);\r\n\r\n  const areSignaturesValid = async () => {\r\n    return new Promise<boolean>((resolve => {\r\n      Promise.all<boolean>(\r\n        Object.keys(folder.signatures).reduce((promises: Array<Promise<boolean>>, s) => {\r\n          return [checkSignature(folder, s), ...promises]\r\n        }, [])\r\n      ).then((values) => {\r\n          resolve(values.reduce((isSigned: boolean, item: boolean) => {\r\n            return item !== false && isSigned;\r\n          }, false))\r\n      })\r\n    }));\r\n  }\r\n  /*\r\n  const doDownload = () => {\r\n    if (props.platform === \"web\") {\r\n      var fileUrl = \"data:\" + folder.mimeType + \";base64,\" + folder.data;\r\n\r\n      fetch(fileUrl).then(response => response.blob()).then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = window.document.createElement(\"a\");\r\n        link.href = url;\r\n        const fileName = folder.name;\r\n        link.setAttribute(\"download\", fileName);\r\n        window.document.body.appendChild(link);\r\n        link.click();\r\n      });\r\n    }\r\n    else {\r\n      //TODO\r\n    }\r\n  };\r\n  */\r\n\r\n  const folder = props.bagsData[address];\r\n  let lastSignature: string | undefined = undefined;\r\n  if (folder && folder.signatures) {\r\n    if (folder.signatures['0']) lastSignature = '0';\r\n    if (folder.signatures['1']) lastSignature = '1';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/*\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>{props.bagId}</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton\r\n              onClick={() => {\r\n                history.replace('/doc', { direction: 'back' });\r\n              }}\r\n            >\r\n              Close\r\n            </IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      */}\r\n    \r\n      <IonContent className=\"modal-document\">\r\n        \r\n        {typeof document === 'undefined' ? (\r\n          <IonLoading isOpen={true} />\r\n        ) : (\r\n          undefined\r\n        )}\r\n        {document === null ? (\r\n          <span className=\"no-document\">No document attached</span>\r\n        ) : (\r\n          /*\r\n          <div className=\"qrCodeContainer\">\r\n            <QRCodeComponent\r\n              url={`did:rchain:${props.registryUri}/${props.bagId}`}\r\n            />\r\n          </div>\r\n          */\r\n          undefined\r\n        )}\r\n        {/* document ? (\r\n          <div className=\"ps5\">\r\n            <div className=\"document\">\r\n              <div className=\"left\">\r\n                {['application/pdf'].includes(\r\n                  folder.mimeType\r\n                ) ? (\r\n                    <div\r\n                      className=\"pdf\"\r\n\r\n                    ><span>PDF</span></div>\r\n                  ) : (\r\n                    <React.Fragment />\r\n                  )}\r\n              </div>\r\n              <div className=\"right\">\r\n                <h5>\r\n                  {props.bagsData[address].name}\r\n                </h5>\r\n                <h5>\r\n                  Date (UTC) {props.bagsData[address].date}\r\n                </h5>\r\n                <h5>\r\n                  {\r\n                    props.bagsData[address].mimeType\r\n                  }\r\n                </h5>\r\n              </div>\r\n            </div>\r\n             */}\r\n\r\n        <IonButtons className=\"ButtonArray\">\r\n          <IonButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              history.replace('/doc', { direction: 'back' });\r\n            }}\r\n          >\r\n            Close\r\n          </IonButton>\r\n        </IonButtons>\r\n        <div className=\"FloatingBottomLeft\">\r\n          <div className=\"Files\">\r\n            {Object.keys(folder.files).map(filename => {\r\n              const file = folder.files[filename];\r\n              return (\r\n                <div key={filename}>\r\n                  {['image/png', 'image/jpg', 'image/jpeg'].includes(\r\n                    file.mimeType\r\n                  ) ? (\r\n                    <div\r\n                      className={`ImageFrame ${\r\n                        folder.mainFile === filename ? 'main' : ''\r\n                      }`}\r\n                    >\r\n                      <img\r\n                        className=\"Image\"\r\n                        alt={file.name}\r\n                        src={`data:${file.mimeType};base64, ${file.data}`}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <React.Fragment />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {Object.keys(folder.signatures).map(s => {\r\n            return (\r\n              <IonChip key={s} className=\"signature-line\">\r\n                {checkSignature(folder, s) ? (\r\n                  <>\r\n                    <span className=\"signature-ok\">✓</span>\r\n                    {`signature n°${s} verified (${folder.signatures[\r\n                      s\r\n                    ].publicKey.slice(0, 12)}…)`}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span>✗</span>\r\n                    {`signature n°${s} invalid (${folder.signatures[\r\n                      s\r\n                    ].publicKey.slice(0, 12)}…)`}\r\n                  </>\r\n                )}\r\n              </IonChip>\r\n            );\r\n          })}\r\n          {areSignaturesValid() && props.user === 'publisher' ? (\r\n            <div>\r\n              <IonItem>\r\n                <IonLabel position=\"floating\" color=\"primary\">\r\n                  Enter price\r\n                </IonLabel>\r\n                <IonInput\r\n                  ref={priceInput} \r\n                  class=\"attestation-step-set-price\"\r\n                  color=\"primary\"\r\n                  placeholder=\"enter price(in rev) of nft\"\r\n                  type=\"number\"\r\n                  value={price}\r\n                  onKeyPress={e => {\r\n                    if (e.key === 'Enter' && price && price > 0) {\r\n                      setCurrentStep(currentStep + 1);\r\n                    }\r\n                  }}\r\n                  onIonChange={e => {\r\n                    const inPrice = parseInt((e.target as HTMLInputElement).value);\r\n                      setPrice(inPrice)\r\n                    }\r\n                  }\r\n                />\r\n              </IonItem>\r\n              { /*\r\n              <IonItem>\r\n              <IonInput \r\n                  class=\"attestation-step-set-revaddr\"\r\n                  color=\"primary\"\r\n                  placeholder=\"Add a recipient REV addr\"\r\n                  type=\"text\"\r\n                  value={recipientInput}\r\n                  onIonChange={e => {\r\n                    const inRecipient = (e.target as HTMLInputElement).value;\r\n                      setRecipientInput(inRecipient)\r\n                    }\r\n                  }\r\n                >\r\n                  <IonButton slot=\"end\" onClick={async () => {\r\n                    console.info(\"CLICK\");\r\n                    if (recipientInput) {\r\n                      let revAddr = \"\";\r\n                      console.info(\"recipientInput:\");\r\n                      console.info(recipientInput);\r\n                      \r\n\r\n                      const resolver = new Resolver({\r\n                        ...getRchainResolver()\r\n                      });\r\n                      try {\r\n                        const parsed = await resolver.resolve(\"did:rchain:\"+props.registryUri+\"/\" + recipientInput);\r\n                        \r\n                        const pubKey = parsed.publicKey[0].publicKeyHex;\r\n                        if (pubKey) {\r\n                          revAddr = rchainToolkit.utils.revAddressFromPublicKey(pubKey);\r\n                          console.info(\"REV ADDRESS:\");\r\n                          console.info(revAddr);\r\n                        }\r\n\r\n                      }\r\n                      catch (err) {\r\n                        console.info(\"not a did\");\r\n                      }\r\n                      \r\n                      setRevAddresses(new Map<string, string>([ [recipientInput, revAddr], ...revAddresses]));\r\n                      //setRevDistribution(new Map<string, number>([ [recipientInput, 25], ...revDistribution]));\r\n                      setPayees(new Map<string, {revAddress: string, fraction100: number}>([ [recipientInput, {\"revAddress\": revAddr, \"fraction100\": 100 * 100}], ...payees]));\r\n                      setRecipientInput(\"\");\r\n                    }\r\n                  }}>+</IonButton>\r\n              </IonInput>\r\n              </IonItem>\r\n\r\n              */ }\r\n\r\n              {/*\r\n               [...payees.keys()].map( (val, index) => {\r\n                const revAddress = payees.get(val)?.revAddress as string;\r\n                const fraction = (payees?.get(val)?.fraction100 as number | 0) / 100;\r\n              return (\r\n              <IonItemSliding className=\"container\" key={val}>\r\n                <IonItemOptions side=\"end\">\r\n                  <IonItemOption\r\n                    color=\"danger\"\r\n                    onClick={() => console.log('share clicked')}\r\n                  >\r\n                    <IonIcon icon={trash} size=\"large\" />\r\n                  </IonItemOption>\r\n                </IonItemOptions>\r\n                <IonItem\r\n                  // eslint-disable-next-line no-useless-concat\r\n                  detail={false}\r\n                  button\r\n                >\r\n                  <IonLabel className=\"ion-text-wrap\">\r\n                    {val}\r\n                  </IonLabel>\r\n                  <IonRange pin={true} value={fraction} onIonChange={e => {\r\n                    const newShare = e.detail.value as number * 100\r\n                    const share = new Map<string, {revAddress: string, fraction100: number}>([[val, {\"revAddress\": revAddress, \"fraction100\": newShare}]]);\r\n                    setPayees(new Map<string, {revAddress: string, fraction100: number}>([...payees, ...share]));\r\n\r\n                    console.info(payees);\r\n                  }\r\n                    } />\r\n                  <IonLabel>{fraction}%</IonLabel>\r\n                  <IonButton icon-only color=\"none\" class=\"LockButton\">\r\n                    <IonIcon icon={lockOpenOutline} size=\"small\" color=\"light\"/>\r\n                  </IonButton>\r\n                </IonItem>\r\n              </IonItemSliding>)\r\n              })\r\n              */}\r\n\r\n              <IonButton\r\n                disabled={isPublishing}\r\n                className=\"attestation-step-do-publish SignatureRequiredBtn\"\r\n                size=\"default\"\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                  setIsPublishing(true);\r\n                  props.publish(props.registryUri, props.bagId, price || 0, [...payees.values()]);\r\n                }}\r\n              >\r\n                Publish to Marketplace\r\n              </IonButton>\r\n            </div>\r\n          ) : (\r\n            <React.Fragment />\r\n          )}\r\n          {[undefined, '0'].includes(lastSignature) && (\r\n            <IonButton\r\n              disabled={isAttesting}\r\n              className=\"SignatureRequiredBtn\"\r\n              size=\"default\"\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setIsAttesting(true);\r\n                props.reupload(props.registryUri, props.bagId);\r\n              }}\r\n            >\r\n              Attest and Sign\r\n            </IonButton>\r\n          )}\r\n        </div>\r\n        </IonContent>\r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalDocument = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      bags: state.reducer.bags,\r\n      bagsData: state.reducer.bagsData,\r\n      state: state,\r\n      platform: getPlatform(state),\r\n      user: state.reducer.user\r\n    };\r\n  },\r\n  (dispatch: Dispatch) => {\r\n    return {\r\n      loadBag: (registryUri: string, bagId: string, state: HistoryState) => {\r\n        dispatch({\r\n          type: 'LOAD_BAG_DATA',\r\n          payload: {\r\n            registryUri: registryUri,\r\n            bagId: bagId,\r\n            state: state,\r\n          },\r\n        });\r\n      },\r\n      reupload: (registryUri: string, bagId: string) => {\r\n        dispatch({\r\n          type: 'REUPLOAD_BAG_DATA',\r\n          payload: {\r\n            bagId: bagId,\r\n            registryUri: registryUri,\r\n          },\r\n        });\r\n      },\r\n      publish: (registryUri: string, bagId: string, price: number, fees: Array<{\r\n        revAddress: string;\r\n        fraction100: number;\r\n    }>) => {\r\n        dispatch({\r\n          type: 'PUBLISH_BAG_DATA',\r\n          payload: {\r\n            bagId: bagId,\r\n            registryUri: registryUri,\r\n            price: price,\r\n            fees: fees\r\n          },\r\n        });\r\n      },\r\n    };\r\n  }\r\n)(ModalDocumentComponent);\r\n\r\nexport default ModalDocument;","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  IonContent,\r\n  IonTitle,\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n  IonIcon,\r\n  IonRadioGroup,\r\n  IonRadio,\r\n  IonButtons,\r\n  IonButton,\r\n  IonItemSliding,\r\n  IonItemOptions,\r\n  IonItemOption,\r\n  IonTextarea\r\n} from '@ionic/react';\r\nimport { document as documentIcon, trash, /* create */ } from 'ionicons/icons';\r\nimport { useHistory, RouteComponentProps } from 'react-router';\r\n//import  {IonicSelectable} from \"@ionic-selectable/core/dist/custom-elements\";\r\n\r\nimport {\r\n  Bag,\r\n  Folder,\r\n  getBags,\r\n  getBagsData,\r\n  getPublicKey,\r\n  HistoryState,\r\n  getPlatform,\r\n} from '../store';\r\n\r\nimport './ModalUploadDocument.scoped.css';\r\n\r\nimport { FileSelect } from \"capacitor-file-select\";\r\nimport { withTour } from '@reactour/tour'\r\n\r\n//Instead of deprecated withRouter\r\nexport const withHistory = (Component: any) => {\r\n  \r\n  return (props: any) => {\r\n    const history = useHistory();\r\n\r\n    return <Component history={history} {...props} />;\r\n  };\r\n};\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      \"ionic-selectable\": React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\r\n    }\r\n  }\r\n}\r\n\r\ninterface ModalUploadDocumentProps extends RouteComponentProps {\r\n  state: HistoryState;\r\n  publicKey: string;\r\n  bags: { [bagId: string]: Bag };\r\n  upload: (bagId: string, folder: Folder, did: string, files: any, mainFileResolution: string, description: string | null | undefined) => void;\r\n  platform: string;\r\n  setCurrentStep: (arg0: number) => void;\r\n  currentStep: number;\r\n  setSteps: (arg0: Array<any>) => void;\r\n  setIsOpen: (arg0: boolean) => void;\r\n  //recipient: string;\r\n}\r\ninterface ModalUploadDocumentState {\r\n  recipient: string;\r\n  mainFile: string;\r\n  description: string | null | undefined;\r\n  mainFileResolution: string;\r\n  bagId: string;\r\n  dropErrors: string[];\r\n  folder: undefined | Folder;\r\n  files: undefined | any;\r\n  platform: string;\r\n  attestorSelect: React.RefObject<HTMLIonItemElement>;\r\n  nameInput: React.RefObject<HTMLIonInputElement>;\r\n  isUploading: boolean;\r\n  //price: string;\r\n}\r\n\r\nlet folder: Folder = {\r\n  signatures: {},\r\n  date: new Date().toUTCString(),\r\n  files: {},\r\n  mainFile: \"\"\r\n};\r\n\r\nconst componentSteps = [\r\n  { selector: '.attestation-step-file', content: 'Pick a photo you wish to upload.' },\r\n  { selector: '.attestation-step-name', content: 'Choose a name for your new NFT.' },\r\n  { selector: '.attestation-step-main-file', content: 'Set your photo as your main file.' },\r\n  { selector: '.attestation-step-select-attestor', content: 'Click here and appoint an attestor.'},\r\n  { selector: '.attestation-step-upload', content: 'Now press upload to begin the attestation process.' },\r\n]\r\n\r\n\r\n    //highlightedSelectors: [\"ionic-selectable-modal.ion-page\"],\r\n    //mutationObservables: [\"ion-modal.show-modal.modal-interactive\"]\r\n  \r\n\r\nclass ModalUploadDocumentComponent extends React.Component<\r\n  ModalUploadDocumentProps,\r\n  ModalUploadDocumentState\r\n> {\r\n  constructor(props: ModalUploadDocumentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      folder: undefined,\r\n      recipient: '',\r\n      mainFile: '',\r\n      description: '',\r\n      mainFileResolution: '',\r\n      bagId: '',\r\n      dropErrors: [],\r\n      platform: props.platform,\r\n      files: {},\r\n      attestorSelect: React.createRef(),\r\n      nameInput: React.createRef(),\r\n      isUploading: false\r\n    };\r\n  }\r\n  \r\n  dropEl: HTMLTextAreaElement | undefined = undefined;\r\n\r\n  componentDidMount() {\r\n    setTimeout( () => {\r\n      this.props.setSteps(componentSteps);\r\n      console.info(\"NEXT STEP\");\r\n      this.props.setCurrentStep(this.props.currentStep + 1);\r\n    }, 100);\r\n\r\n    const node = this.state.attestorSelect.current;\r\n    (node as any).items = [\r\n      { id: 1, name: \"Attestor\"},\r\n      { id: 2, name: \"Charity\"},\r\n    ];\r\n\r\n    //(node as any).hasConfirmButton = true;\r\n    (node as any).addEventListener(\"changed\", (event: any) => {\r\n      console.log(event);\r\n    });\r\n  }\r\n\r\n  blobToBase64 = (blob: Blob) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onerror = reject;\r\n      reader.onload = () => {\r\n        resolve(reader.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n\r\n  nativeFilePicker = async () => {\r\n    const that = this;\r\n    let selectedFile = await FileSelect.select({\r\n      multiple: false,\r\n      extensions: ['.jpg', '.png', '.jpeg'],\r\n    });\r\n\r\n    const file0 = selectedFile.files[0];\r\n\r\n    const fileResponse = await fetch(file0.path as any); //TODO: fix type inside the plugin\r\n    const fileBlob = await fileResponse.blob();\r\n\r\n    const asbase: string = (await this.blobToBase64(fileBlob)) as string;\r\n\r\n    const folder: Folder = {\r\n      signatures: {},\r\n      date: new Date().toUTCString(),\r\n      files: {\r\n        [file0.name]: {\r\n          name: file0.name,\r\n          mimeType: fileBlob.type,\r\n          data: Buffer.from(asbase.split(',')[1]).toString('base64'),\r\n        }\r\n      },\r\n      mainFile: \"\"\r\n    }\r\n\r\n    folder.mainFile = folder.mainFile || Object.keys(folder.files)[0];\r\n\r\n    that.setState({\r\n      folder: {...folder},\r\n    });\r\n  };\r\n\r\n  saveRef = (el: HTMLTextAreaElement) => {\r\n    this.dropEl = el;\r\n    if (this.dropEl) {\r\n      this.dropEl.addEventListener('dragenter', (e: DragEvent) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      });\r\n\r\n      this.dropEl.addEventListener('dragover', (e: DragEvent) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      });\r\n    \r\n      this.dropEl.addEventListener('drop', (e: DragEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.onDrop(e as any);\r\n        return false;\r\n      });\r\n    }\r\n  };\r\n\r\n  onDrop = (e: React.DragEvent<HTMLTextAreaElement>) => {\r\n    console.info(\"DROP\");\r\n    const that = this;\r\n    e.preventDefault();\r\n    var files = e.dataTransfer.files;\r\n    if (!files[0]) {\r\n      this.setState({\r\n        dropErrors: ['Please drop a file'],\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ dropErrors: [] });\r\n\r\n    Array.from(files).forEach(file => {\r\n      this.handleFile(file);\r\n    })\r\n\r\n    console.info(\"Done handling files\");\r\n\r\n    setTimeout( () => {\r\n      console.info(\"After handling files timeout\");\r\n      this.props.setCurrentStep(this.props.currentStep + 1);\r\n      if (this.state.nameInput.current) {\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        //this.state.nameInput.current.value = \"Unseen Photo\";\r\n        this.state.nameInput.current?.setFocus();\r\n        this.setState({\r\n          bagId: \"Unseen Photo\",\r\n        })\r\n        \r\n        setTimeout( () => {\r\n          this.props.setCurrentStep(this.props.currentStep + 1);\r\n        }, 5000);\r\n      }\r\n    }, 100);\r\n\r\n    //folder.files = this.state.files;\r\n    //folder.mainFile = folder.mainFile || Object.keys(files)[0];\r\n  \r\n    that.setState({\r\n      folder: {\r\n        ...folder,\r\n        mainFile: folder.mainFile || Object.keys(files)[0]\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      mainFile: folder.mainFile,\r\n    })\r\n    \r\n  };\r\n\r\n  handleFile = (file: File) => {\r\n    const that = this;\r\n    var r = new FileReader();\r\n      \r\n    //If file type is not an image, continue\r\n    if (!file.type.match('image.*')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      r.onloadend = async function(e) {\r\n        if (!e || !e.target || typeof r.result !== 'string') {\r\n          return;\r\n        }\r\n\r\n        that.setState({\r\n          files: {\r\n            ...that.state.files,\r\n            [file.name]: {\r\n              name: file.name,\r\n              mimeType: file.type,\r\n              data: r.result.split(',')[1],\r\n            }\r\n          },\r\n        });\r\n\r\n      };\r\n    } catch (e) {\r\n      this.setState({ dropErrors: ['Error parsing file'] });\r\n    }\r\n\r\n    r.readAsDataURL(file);\r\n  }\r\n\r\n  onFileChange = (e: any) => {\r\n    if ((e.target as HTMLInputElement).files) {\r\n      var files = e.target?.files as FileList;\r\n\r\n      //var filesArr = Array.prototype.slice.call(files);\r\n      //console.log(filesArr);\r\n\r\n      Array.from(files).forEach(file => {\r\n        this.handleFile(file);\r\n      })\r\n\r\n      setTimeout( () => {\r\n        this.props.setCurrentStep(this.props.currentStep + 1);\r\n        if (this.state.nameInput.current) {\r\n          // eslint-disable-next-line react/no-direct-mutation-state\r\n          //this.state.nameInput.current.value = \"Unseen Photo\";\r\n          this.state.nameInput.current?.setFocus();\r\n\r\n          this.setState({\r\n            bagId: \"Unseen Photo\",\r\n          })\r\n\r\n          setTimeout( () => {\r\n            this.props.setCurrentStep(this.props.currentStep + 1);\r\n          }, 5000);\r\n        }\r\n      }, 100);\r\n  \r\n      //folder.files = this.state.files;\r\n      //folder.mainFile = folder.mainFile || Object.keys(files)[0];\r\n    \r\n      this.setState({\r\n        folder: {\r\n          ...folder,\r\n          mainFile: folder.mainFile || Object.keys(files)[0]\r\n        }\r\n      });\r\n  \r\n      this.setState({\r\n        mainFile: folder.mainFile,\r\n      })\r\n    }\r\n  }\r\n\r\n  //  readURL = (input: { files: Blob[]; }) => {\r\n  //       if (input.files && input.files[0]) {\r\n  //           var reader = new FileReader();\r\n\r\n  //           reader.onload = function (e) {\r\n  //               $('#blah')\r\n  //                   .attr('src', e.target.result)\r\n  //                   .width(150)\r\n  //                   .height(200);\r\n  //           };\r\n\r\n  //           reader.readAsDataURL(input.files[0]);\r\n  //       }\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <IonContent class=\"modal-document\">\r\n        <IonTitle class=\"upload-to-the-blockchain\">\r\n          Create new item\r\n        </IonTitle>\r\n\r\n        <IonButtons className=\"ButtonArray\">\r\n          <IonButton className=\"close\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.replace('/doc', { direction: 'back' });\r\n            }}\r\n          >\r\n            x\r\n          </IonButton>\r\n        </IonButtons>\r\n\r\n        <IonContent className=\"inner\">\r\n          <IonItem>\r\n            <IonLabel className=\"label\" position=\"floating\">\r\n              Enter name of item*\r\n            </IonLabel>\r\n            <IonInput\r\n              className=\"attestation-step-name label\"\r\n              ref={this.state.nameInput} \r\n              //className=\"label\"\r\n              id=\"nameInput\"\r\n              placeholder=\"Item Name\"\r\n              type=\"text\"\r\n              value={this.state.bagId}\r\n              maxlength={22}\r\n              onIonChange={e => \r\n                this.setState({\r\n                  bagId: (e.target as HTMLInputElement).value,\r\n                })\r\n                \r\n              }\r\n            />\r\n          </IonItem>\r\n\r\n          <IonItem>\r\n            <IonLabel className=\"label\" position=\"floating\">\r\n              Give a brief story about your item\r\n            </IonLabel>\r\n            <IonTextarea className=\"description\"\r\n              placeholder=\"Provide a brief description\"\r\n              value={this.state.description}\r\n              onIonChange={e =>\r\n                this.setState({\r\n                  description: (e.detail.value),\r\n                })\r\n              }\r\n            ></IonTextarea>\r\n          </IonItem>\r\n         \r\n          <IonItem className=\"attestation-step-select-attestor\">\r\n            <IonLabel className=\"custom-radio\">Select Attestor:</IonLabel>\r\n            <IonRadioGroup value={this.state.recipient} onIonChange={e => {\r\n              setTimeout( () => {\r\n                this.props.setCurrentStep(this.props.currentStep + 1);\r\n              }, 100);\r\n              this.setState({\r\n                recipient: (e.detail.value),\r\n              })}\r\n            }>\r\n\r\n            <IonItem ref={this.state.attestorSelect}>\r\n              <IonLabel className=\"custom-radio\">Attestor</IonLabel>\r\n              <IonRadio slot=\"start\" value=\"attestor\" />\r\n            </IonItem>\r\n\r\n            </IonRadioGroup>\r\n          </IonItem>\r\n          { /*\r\n          <IonItem className=\"attestation-step-select-attestor\">\r\n              <IonLabel className=\"label\">Request signature from:</IonLabel>\r\n              <ionic-selectable\r\n                className=\"label\"\r\n                slot=\"end\"\r\n                ref={this.state.attestorSelect}\r\n                id=\"port\"\r\n                should-store-item-value=\"false\"\r\n                is-multiple=\"false\"\r\n                item-value-field=\"id\"\r\n                item-text-field=\"name\"\r\n                placeholder=\"Select One\"\r\n                group-text-field=\"country.name\"\r\n              ></ionic-selectable>\r\n            </IonItem>\r\n          */ }\r\n          {this.props.platform === 'web' ? (\r\n            <div className=\"attestation-step-file\">\r\n            <div\r\n              className={`drop-area ${!!this.state.folder ? '' : ''}`}\r\n            >\r\n              <textarea ref={this.saveRef}/>\r\n                <span className=\"img-upload\">\r\n                  <IonIcon icon={documentIcon} size=\"large\" />\r\n                  <p>Drag and Drop your files</p>\r\n                </span>\r\n              </div>\r\n              <input className=\"FileSelectButton\" accept=\"image/png,image/jpg,image/jpeg\" title=\"Browse\" type=\"file\" onChange={this.onFileChange}></input>\r\n            </div>\r\n          ) : (\r\n            undefined\r\n          )}\r\n          {this.props.platform === 'ios' ||\r\n          this.props.platform === 'android' ? (\r\n            <IonButton\r\n              onClick={() => {\r\n                this.nativeFilePicker();\r\n              }}\r\n            >\r\n              Pick a document\r\n            </IonButton>\r\n          ) : (\r\n            undefined\r\n          )}\r\n\r\n{\r\n            Object.keys(this.state?.files || {}).forEach(filename => {\r\n              const file = this.state.files[filename];\r\n              if (file) {\r\n                return (\r\n                  <IonItemSliding className=\"container\" key={filename}>\r\n                  <IonItemOptions side=\"end\">\r\n                    <IonItemOption\r\n                      color=\"danger\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          files: Object.keys(this.state?.files)\r\n                          .filter(key => key !== filename)\r\n                          .reduce((obj: any, key) => {\r\n                            obj[key] = this.state?.files[key];\r\n                            return obj;\r\n                          }, {})\r\n                        })\r\n                      }}\r\n                    >\r\n                      <IonIcon icon={trash} size=\"large\" />\r\n                    </IonItemOption>\r\n                  </IonItemOptions>\r\n                  <IonItem\r\n                    detail={false}\r\n                    button\r\n                    onClick={() => {\r\n                      console.info(\"click on item\");\r\n                    }}\r\n                  >\r\n                    <div className=\"IconContainer\">\r\n                      <IonIcon icon={documentIcon} size=\"large\" color=\"primary\"/>\r\n                    </div>\r\n                    <IonLabel className=\"ion-text-wrap\" color=\"primary\">\r\n                      <h2>{filename}</h2>\r\n                    </IonLabel>\r\n                  </IonItem>\r\n                </IonItemSliding>\r\n                )}\r\n            })\r\n            }\r\n\r\n            <IonItem>\r\n              <IonLabel className=\"label\">Main file:</IonLabel>\r\n             \r\n                {Object.keys(this.state?.files || {}).map(filename => {\r\n                    return(<IonRadioGroup key={filename} value={this.state.mainFile} onIonChange={e => {\r\n                      setTimeout( () => {\r\n                        this.props.setCurrentStep(this.props.currentStep + 1);\r\n                      }, 100);\r\n                      this.setState({\r\n              mainFile: (e.detail.value),\r\n              })}\r\n            }>\r\n          \r\n            <IonItem className=\"attestation-step-main-file\">\r\n              <IonLabel className=\"custom-radio\">{filename}</IonLabel>\r\n              <IonRadio slot=\"start\" value={filename} />\r\n            </IonItem>\r\n\r\n          </IonRadioGroup>)\r\n                  })\r\n                }\r\n            \r\n            </IonItem>\r\n\r\n           <IonItem>\r\n            <IonLabel className=\"label\" position=\"floating\">\r\n              Enter Resolution of main NFT item\r\n            </IonLabel>\r\n            <IonInput\r\n              className=\"label\"\r\n              placeholder=\"1920 x 1080\"\r\n              type=\"text\"\r\n              value={this.state.mainFileResolution}\r\n              onIonChange={e =>\r\n                this.setState({\r\n                  mainFileResolution: (e.target as HTMLInputElement).value,\r\n                })\r\n              }\r\n            />\r\n          </IonItem>\r\n          { /*this.state.folder ? (\r\n            <div className=\"document\">\r\n              <div className=\"left\">\r\n                <IonIcon icon={documentIcon} size=\"large\" />\r\n              </div>\r\n              <div className=\"right\">\r\n                <h5>{this.state.document.name}</h5>\r\n                <h5>{this.state.document.mimeType}</h5>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            undefined\r\n          ) */}\r\n          {this.state.folder ? (\r\n            <IonItem>\r\n              <IonButton\r\n                className=\"attestation-step-upload AddButton\"\r\n                disabled={this.state.isUploading || !this.state.folder || !this.state.bagId}\r\n                onClick={() => {\r\n                  this.props.setIsOpen(false);\r\n                  this.setState({\r\n                    ...this.state,\r\n                    isUploading: true,\r\n                  })\r\n                  this.props.upload(\r\n                    this.state.bagId,\r\n                    this.state.folder as Folder,\r\n                    this.state.recipient as string,\r\n                    this.state.files,\r\n                    this.state.mainFileResolution,\r\n                    this.state.description\r\n                  );\r\n                }}\r\n              >\r\n                Upload\r\n              </IonButton>\r\n              <IonButton\r\n                disabled={this.state.isUploading}\r\n                className=\"AddButton\"\r\n                onClick={() => {\r\n                  this.setState({ folder: undefined });\r\n                }}\r\n              >\r\n                Cancel\r\n              </IonButton>\r\n            </IonItem>\r\n          ) : (\r\n            undefined\r\n          )}\r\n        </IonContent>\r\n      </IonContent>\r\n    );\r\n  }\r\n}\r\n\r\nconst ModalUploadDocument = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      state: state,\r\n      bags: getBags(state),\r\n      bagsData: getBagsData(state),\r\n      publicKey: getPublicKey(state) as string,\r\n      platform: getPlatform(state),\r\n    };\r\n  },\r\n  (dispatch: Dispatch) => {\r\n    return {\r\n      upload: (bagId: string, folder: Folder, did: string, files: any, mainFileResolution: string, description: string | null | undefined) => {\r\n        dispatch({\r\n          type: 'UPLOAD',\r\n          payload: {\r\n            bagId: bagId,\r\n            folder: {\r\n              ...folder,\r\n              files: files\r\n            },\r\n            recipient: did,\r\n            mainFileResolution,\r\n            description\r\n          },\r\n        });\r\n      },\r\n    };\r\n  }\r\n)(ModalUploadDocumentComponent);\r\n\r\nexport default withTour(withHistory(ModalUploadDocument));","import { registerPlugin } from '@capacitor/core';\nconst FileSelect = registerPlugin('FileSelect', {\n    web: () => import('./web').then(m => new m.FileSelectWeb()),\n});\nexport * from './definitions';\nexport { FileSelect };\n//# sourceMappingURL=index.js.map","import { connect } from 'react-redux';\r\nimport React, { /* useEffect */ } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n  IonItem,\r\n  IonRefresher,\r\n  IonRefresherContent,\r\n  IonSearchbar,\r\n  IonButton,\r\n  //IonIcon,\r\n} from '@ionic/react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\n//import { refreshOutline } from 'ionicons/icons';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport './Horizontal.scoped.css';\r\nimport { HistoryState } from '../store';\r\n//import { useTour } from '@reactour/tour';\r\n\r\ninterface HorizontalProps {\r\n  registryUri: string;\r\n  publicKey: string;\r\n  searchText: string;\r\n  refresh: (a: { publicKey: string; registryUri: string }) => void;\r\n  setSearchText: (searchText: string) => void;\r\n  user: string;\r\n}\r\n\r\nconst HorizontalComponent: React.FC<HorizontalProps> = props => {\r\n  const history = useHistory();\r\n\r\n  const doFetch = () => {\r\n    props.refresh({\r\n      registryUri: props.registryUri,\r\n      publicKey: props.publicKey,\r\n    });\r\n  };\r\n\r\n  const doRefresh = (event: CustomEvent<RefresherEventDetail>) => {\r\n    doFetch();\r\n    event.detail.complete();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IonRefresher slot=\"fixed\" onIonRefresh={doRefresh}>\r\n        <IonRefresherContent />\r\n      </IonRefresher>\r\n      {/*\r\n      <div>\r\n        <IonItem class=\"connectedAs\">Connected as {props.connected}</IonItem>\r\n      </div>\r\n      */}\r\n      <div className=\"container\">\r\n        <IonItem\r\n          detail={false}\r\n          no-padding\r\n          lines=\"none\"\r\n          className=\"SearchBarContainer\"\r\n        >\r\n          {props.user === \"publisher\" ? (\r\n          <IonButton\r\n            className=\"attestation-step-upload-button AddButton with-border\"\r\n            icon-only\r\n            slot=\"start\"\r\n            color=\"none\"\r\n            size=\"default\"\r\n            onClick={() => {\r\n              history.push('/doc/upload/');\r\n            }}\r\n          >\r\n            <span>upload</span>\r\n          </IonButton>) : (<React.Fragment />)} {' '}\r\n          { /*\r\n          <IonButton\r\n            className=\"AddButton with-border\"\r\n            icon-only\r\n            slot=\"start\"\r\n            color=\"none\"\r\n            size=\"default\"\r\n            onClick={() => {\r\n              doFetch();\r\n            }}\r\n          >\r\n            <IonIcon icon={refreshOutline} /> <span>refresh</span>\r\n          </IonButton>\r\n          */ }\r\n          <IonSearchbar\r\n            color=\"none\"\r\n            value={props.searchText}\r\n            onIonChange={e => props.setSearchText(e.detail.value!)}\r\n          />\r\n        </IonItem>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Horizontal = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      registryUri: state.reducer.registryUri as string,\r\n      publicKey: state.reducer.publicKey as string,\r\n      searchText: state.reducer.searchText as string,\r\n      user: state.reducer.user\r\n    };\r\n  },\r\n  (dispatch: Dispatch) => {\r\n    return {\r\n      refresh: (a: { publicKey: string; registryUri: string }) => {\r\n        dispatch({\r\n          type: 'REFRESH',\r\n          payload: a,\r\n        });\r\n      },\r\n\r\n      setSearchText: (searchText: string) => {\r\n        dispatch({\r\n          type: 'SET_SEARCH_TEXT',\r\n          payload: searchText,\r\n        });\r\n      },\r\n    };\r\n  }\r\n)(HorizontalComponent);\r\n\r\nexport default Horizontal;\r\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport {\r\n  IonIcon,\r\n  IonItem,\r\n  IonLabel,\r\n  IonItemSliding,\r\n  IonItemOptions,\r\n  IonItemOption,\r\n  IonButton,\r\n} from '@ionic/react';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport { Bag, Folder } from '../store';\r\nimport './BagItem.scoped.css';\r\n\r\nimport { document as documentIcon, trash, create } from 'ionicons/icons';\r\nimport { bagIdFromAddress } from '../utils/bagIdFromAddress';\r\n\r\ninterface BagItemProps {\r\n  bag: Bag;\r\n  registryUri: string;\r\n  id: string;\r\n  awaitsSignature: boolean;\r\n  completed: boolean;\r\n  onlyCompleted: boolean;\r\n  folder: Folder;\r\n  pos: string;\r\n}\r\n\r\nconst BagItemComponent: React.FC<BagItemProps> = ({\r\n  onlyCompleted,\r\n  id,\r\n  awaitsSignature,\r\n  completed,\r\n  folder,\r\n  bag,\r\n  pos\r\n}) => {\r\n  const history = useHistory();\r\n  const publisher = localStorage.getItem('publisher');\r\n  console.log(awaitsSignature);\r\n  return (\r\n    <IonItemSliding className=\"container\" disabled>\r\n      <IonItemOptions side=\"end\">\r\n        <IonItemOption\r\n          color=\"secondary\"\r\n          onClick={() => console.log('favorite clicked')}\r\n        >\r\n          <IonIcon icon={create} size=\"large\" />\r\n        </IonItemOption>\r\n        <IonItemOption\r\n          color=\"danger\"\r\n          onClick={() => console.log('share clicked')}\r\n        >\r\n          <IonIcon icon={trash} size=\"large\" />\r\n        </IonItemOption>\r\n      </IonItemOptions>\r\n      <IonItem\r\n        // eslint-disable-next-line no-useless-concat\r\n        className={`${(!onlyCompleted && Object.keys(folder.signatures).length > 1) ? 'with-parent' : ''} ${completed ? 'attested' + ' pos_' + pos : 'not_attested' + ' pos_' + pos}`}\r\n        detail={false}\r\n        button\r\n        onClick={() => {\r\n          history.push('/doc/show/' + id);\r\n        }}\r\n      >\r\n        <div className=\"IconContainer\">\r\n          <IonIcon\r\n            icon={documentIcon}\r\n            color={completed ? 'success' : 'primary'}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        <IonLabel className=\"ion-text-wrap\">\r\n          <h2>{bagIdFromAddress(id)}</h2>\r\n        </IonLabel>\r\n        {!publisher ? (\r\n          awaitsSignature ? (\r\n            <IonButton className=\"AddButton\">Needs attestation</IonButton>\r\n          ) : (\r\n            <IonButton className=\"AddButton\">Already attested</IonButton>\r\n          )\r\n        ) : (\r\n          undefined\r\n        )}\r\n      </IonItem>\r\n    </IonItemSliding>\r\n  );\r\n};\r\n\r\nconst BagItem = connect(\r\n  undefined,\r\n  undefined\r\n)(BagItemComponent);\r\n\r\nexport default BagItem;\r\n","import { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  IonContent,\r\n  //IonProgressBar,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonIcon,\r\n} from '@ionic/react';\r\nimport { qrCode } from 'ionicons/icons';\r\n\r\nimport {\r\n  getBags,\r\n  getBagsData,\r\n  getConnected,\r\n  getDocumentsAddressesInOrder,\r\n  getDocumentsAwaitingSignature,\r\n  getDocumentsCompleted,\r\n  State,\r\n  HistoryState,\r\n} from '../store';\r\nimport Horizontal from '../components/Horizontal';\r\nimport BagItem from '../components/BagItem';\r\nimport DummyBagItem from '../components/dummy/DummyBagItem';\r\nimport ModalDocument from '../components/ModalDocument';\r\nimport ModalUploadDocument from '../components/ModalUploadDocument';\r\n\r\nimport { parse } from 'did-resolver';\r\nimport { useTour } from '@reactour/tour';\r\n\r\n/*\r\ndeclare global {\r\n  interface Window {\r\n    cordova: {\r\n      plugins: {\r\n        barcodeScanner: {\r\n          scan: (a: unknown, b: unknown, c: unknown) => unknown;\r\n        };\r\n      };\r\n    };\r\n  }\r\n}\r\n*/\r\n/*\r\nconst renderLoading = () => {\r\n  return <IonProgressBar color=\"secondary\" type=\"indeterminate\" />;\r\n};\r\n\r\ntype TRouteParams = {\r\n  uri: string; // since it route params\r\n};\r\n*/\r\n\r\nconst componentSteps = [\r\n  { selector: '.attestation-step-upload-button', content: 'Upload a photo you wish to attest and publish.' },\r\n  { selector: '.attested.pos_0', content: 'Our photo has been attested. Click on it to confirm both signatures are valid.' },\r\n  { selector: '.attested.pos_0', content: 'Our photo has been attested. Click on it to confirm both signatures are valid.' },\r\n]\r\n\r\nconst attestSteps = [\r\n  { selector: '.not_attested.pos_0', content: 'Attestor received a photo to review. Attest it now by clicking on it.' },\r\n  { selector: '.not_attested.pos_0', content: 'Attestor received a photo to review. Attest it now by clicking on it.' },\r\n]\r\n\r\ninterface DockListViewProps {\r\n  connected: string;\r\n  registryUri: string;\r\n  action: 'show' | 'list' | 'upload';\r\n  bagId?: string;\r\n  isLoading: boolean;\r\n  bags: State['bags'];\r\n  bagsData: State['bagsData'];\r\n  documentsAwaitingSignature: State['bagsData'];\r\n  documentsAddressesInOrder: string[];\r\n  documentsCompleted: State['bagsData'];\r\n  searchText: string;\r\n  platform: string;\r\n  user: string;\r\n}\r\n\r\n\r\nconst DockListViewComponent: React.FC<DockListViewProps> = props => {\r\n  const history = useHistory();\r\n\r\n\r\n  const { /* isOpen, currentStep, steps,*/ setIsOpen, setCurrentStep, setSteps } = useTour()\r\n  useEffect(() => {\r\n    const menuTourStep = parseInt(localStorage.getItem('tour') || '0');\r\n    if (props.user === \"publisher\" && menuTourStep <= 2 && !props.bagId) {\r\n      setSteps(componentSteps);\r\n      if (localStorage.getItem('tour')) {\r\n        \r\n\r\n          setTimeout(() => {\r\n            setIsOpen(false);\r\n            setCurrentStep(menuTourStep);\r\n            setIsOpen(true);\r\n          }, 100);\r\n\r\n      }\r\n    }\r\n    if (props.user === \"attestor\" && !props.bagId) {\r\n      setSteps(attestSteps);\r\n      setTimeout(() => {\r\n        setIsOpen(false);\r\n        setCurrentStep(0);\r\n        setIsOpen(true);\r\n      }, 100)\r\n    }\r\n    setIsOpen(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  //const identity = localStorage.getItem('publisher');\r\n\r\n  const scanQRCode = () => {\r\n    (window as any).cordova.plugins.barcodeScanner.scan(\r\n      (result: any) => {\r\n        try {\r\n          const parsedDid = parse(result.text);\r\n          const method = parsedDid.method;\r\n\r\n          if (method === 'rchain') {\r\n            let link = '/doc/show/' + parsedDid.id;\r\n            if (parsedDid.path) {\r\n              link = link + parsedDid.path;\r\n            }\r\n            history.push(link);\r\n          }\r\n        } catch (err) {\r\n          console.info('not a DID. ' + err);\r\n\r\n          const url = new URL(result.text);\r\n          //TODO: check if link is also a valid hosted web app\r\n          history.push(url.pathname + url.search);\r\n        }\r\n      },\r\n      (err: string) => {\r\n        console.error(err);\r\n      },\r\n      {\r\n        showTorchButton: true,\r\n        prompt: 'Scan document URL',\r\n        formats: 'QR_CODE',\r\n        resultDisplayDuration: 0,\r\n      }\r\n    );\r\n  };\r\n\r\n  if (props.action === 'show') {\r\n    return (\r\n      <IonContent>\r\n        <ModalDocument\r\n          registryUri={props.registryUri as string}\r\n          bagId={props.bagId as string}\r\n        />\r\n      </IonContent>\r\n    );\r\n  }\r\n\r\n  if (props.action === 'upload') {\r\n    return (\r\n      <IonContent>\r\n        <ModalUploadDocument />\r\n      </IonContent>\r\n    );\r\n  }\r\n\r\n  return (\r\n    \r\n    <IonContent>\r\n      {props.platform !== 'web' && false ? (\r\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n          <IonFabButton color=\"tertiary\" onClick={scanQRCode}>\r\n            <IonIcon icon={qrCode} />\r\n          </IonFabButton>\r\n        </IonFab>\r\n      ) : (\r\n        undefined\r\n      )}\r\n      {/*\r\n        props.isLoading && props.action === \"list\"\r\n        ? renderLoading()\r\n        : undefined\r\n        */}\r\n      <Horizontal />\r\n      {props.action === 'list' ? (\r\n        <>\r\n          {!props.isLoading\r\n            ? props.documentsAddressesInOrder.map((address, index) => {\r\n                return (\r\n                  <BagItem\r\n                    pos={index.toString()}\r\n                    key={address}\r\n                    registryUri={props.registryUri}\r\n                    id={address}\r\n                    bag={props.bags[address]}\r\n                    folder={props.bagsData[address]}\r\n                    onlyCompleted={false}\r\n                    awaitsSignature={\r\n                      !!props.documentsAwaitingSignature[address]\r\n                    }\r\n                    completed={!!props.documentsCompleted[address]}\r\n                  />\r\n                );\r\n              })\r\n            : [...Array(10)].map((x, i) => (\r\n                <DummyBagItem key={i} id={i.toString()} />\r\n              ))}\r\n        </>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </IonContent>\r\n  );\r\n};\r\n\r\nexport const DockListView = connect(\r\n  (state: HistoryState) => {\r\n    return {\r\n      connected: getConnected(state),\r\n      bags: getBags(state),\r\n      bagsData: getBagsData(state),\r\n      documentsCompleted: getDocumentsCompleted(state),\r\n      documentsAwaitingSignature: getDocumentsAwaitingSignature(state),\r\n      documentsAddressesInOrder: getDocumentsAddressesInOrder(state),\r\n      isLoading: state.reducer.isLoading,\r\n      searchText: state.reducer.searchText,\r\n      platform: state.reducer.platform,\r\n      user: state.reducer.user,\r\n    };\r\n  },\r\n  (dispatch: Dispatch) => {\r\n    return {};\r\n  }\r\n)(DockListViewComponent);\r\n\r\nexport default DockListView;\r\n"],"sourceRoot":""}