{"version":3,"sources":["../../../src/web.ts"],"names":[],"mappings":"+OAGa,EAAb,YAAE,qBAAF,iBAEI,SAAF,IAAI,IAAJ,EAAI,4BACE,EAAJ,YAAM,CACJ,KAAM,sBACN,UAAW,CAAC,UAJhB,OAAS,WAwCD,YAAY,SAAC,GAAD,OAAiB,EAAK,OAAS,GAvCnD,EAFA,uBAAE,IAAJ,MAAI,MASF,SAAI,GACI,OAAuD,OAAtD,aAAa,QAAQ,KAAK,UAAU,EAAQ,MAC/C,QAAQ,QAAQ,CACd,MAAO,KAAK,aAAa,QAAQ,KAAK,UAAU,EAAQ,SAE1D,QAAQ,OAAO,wCAdvB,CAAI,IAAJ,MAAI,MAgBF,SAAI,GAEF,OADA,aAAa,QAAQ,KAAK,UAAU,EAAQ,KAAM,KAAK,EAAQ,QACxD,QAAQ,QAAQ,CAAE,OAAO,MAlBpC,CAAI,IAAJ,SAAI,MAoBF,SAAO,GAEL,OADA,aAAa,WAAW,KAAK,UAAU,EAAQ,MACxC,QAAQ,QAAQ,CAAE,OAAO,MAtBpC,CAAI,IAAJ,QAAI,MAwBF,WACQ,IAAD,IAAM,KAAO,aACiB,IAA7B,EAAI,QAAQ,KAAK,SACnB,aAAa,WAAW,GAG5B,OAAO,QAAQ,QAAQ,CAAE,OAAO,MA9BpC,CAAI,IAAJ,OAAI,MAgCF,WAAI,WACI,EAAO,OAAO,KAAK,cAAc,QAAO,SAAC,GAAD,OAAkC,IAA3B,EAAE,QAAQ,EAAK,WACpE,OAAO,QAAQ,QAAQ,CAAE,MAAO,MAlCpC,CAAI,IAAJ,cAAI,MAqCF,WACE,OAAO,QAAQ,QAAQ,CAAE,MAAO,YAtCpC,G,OAA4C,GA4CtC,EAAsB,IAAI","file":"static/js/18.54b3a78f.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class SecureStoragePluginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'SecureStoragePlugin',\n            platforms: ['web'],\n        });\n        this.PREFIX = 'cap_sec_';\n        this.addPrefix = (key) => this.PREFIX + key;\n    }\n    get(options) {\n        return localStorage.getItem(this.addPrefix(options.key)) !== null\n            ? Promise.resolve({\n                value: atob(localStorage.getItem(this.addPrefix(options.key))),\n            })\n            : Promise.reject('Item with given key does not exist');\n    }\n    set(options) {\n        localStorage.setItem(this.addPrefix(options.key), btoa(options.value));\n        return Promise.resolve({ value: true });\n    }\n    remove(options) {\n        localStorage.removeItem(this.addPrefix(options.key));\n        return Promise.resolve({ value: true });\n    }\n    clear() {\n        for (const key in localStorage) {\n            if (key.indexOf(this.PREFIX) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n        return Promise.resolve({ value: true });\n    }\n    keys() {\n        const keys = Object.keys(localStorage).filter((k) => k.indexOf(this.PREFIX) === 0);\n        return Promise.resolve({ value: keys });\n    }\n    getPlatform() {\n        return Promise.resolve({ value: 'web' });\n    }\n}\nconst SecureStoragePlugin = new SecureStoragePluginWeb();\nexport { SecureStoragePlugin };\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}